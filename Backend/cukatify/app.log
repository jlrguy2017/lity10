2020-06-05 02:40:05,936 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 18860 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 02:40:05,972 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 02:40:06,036 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 02:40:06,037 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 02:40:06,701 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:40:06,702 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 02:40:06,728 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 02:40:06,931 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:40:06,931 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 02:40:06,998 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 02:40:07,019 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 88ms. Found 4 MongoDB repository interfaces.
2020-06-05 02:40:07,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:40:07,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 02:40:07,038 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:40:07,039 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:40:07,039 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:40:07,040 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:40:07,048 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 02:40:07,399 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,402 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,404 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6cab20bb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,407 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,412 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,413 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,413 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:40:07,685 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 02:40:07,695 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 02:40:07,696 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 02:40:07,763 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 02:40:07,763 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1726 ms
2020-06-05 02:40:08,091 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 02:40:08,091 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 02:40:08,197 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed98658b4237d7ec0992ea5', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:231}] to localhost:27017
2020-06-05 02:40:08,202 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed98658b4237d7ec0992ea5', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3142296}
2020-06-05 02:40:08,203 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed98658b4237d7ec0992ea5', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 02:40:08,487 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 02:40:08,530 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:232}] to localhost:27017
2020-06-05 02:40:08,790 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 02:40:09,447 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22ff7fac, org.springframework.security.web.context.SecurityContextPersistenceFilter@53acb125, org.springframework.security.web.header.HeaderWriterFilter@3bc12777, org.springframework.web.filter.CorsFilter@1447a466, org.springframework.security.web.authentication.logout.LogoutFilter@3602cdc4, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@2cf05b7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e75b802, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@236e036, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74f4fa8, org.springframework.security.web.session.SessionManagementFilter@57c05ae5, org.springframework.security.web.access.ExceptionTranslationFilter@33a522c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49f67e6f]
2020-06-05 02:40:09,497 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 02:40:09,698 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 02:40:09,701 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 4.119 seconds (JVM running for 5.07)
2020-06-05 02:44:37,155 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 02:44:37,279 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:232}] to localhost:27017 because the pool has been closed.
2020-06-05 02:44:41,473 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 18994 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 02:44:41,483 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 02:44:41,562 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 02:44:41,563 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 02:44:42,073 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:44:42,073 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 02:44:42,089 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 02:44:42,222 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:44:42,222 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 02:44:42,276 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 02:44:42,303 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 80ms. Found 4 MongoDB repository interfaces.
2020-06-05 02:44:42,313 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 02:44:42,313 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 02:44:42,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:44:42,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:44:42,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:44:42,326 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 02:44:42,334 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 20ms. Found 1 Redis repository interfaces.
2020-06-05 02:44:42,656 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,659 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,663 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@62155310' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,664 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,683 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,684 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,684 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 02:44:42,941 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 02:44:42,949 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 02:44:42,949 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 02:44:43,016 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 02:44:43,016 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1453 ms
2020-06-05 02:44:43,318 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 02:44:43,318 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 02:44:43,356 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9876b5181210d19bd53d5', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:233}] to localhost:27017
2020-06-05 02:44:43,360 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9876b5181210d19bd53d5', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2059578}
2020-06-05 02:44:43,360 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9876b5181210d19bd53d5', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 02:44:43,535 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 02:44:43,567 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:234}] to localhost:27017
2020-06-05 02:44:43,783 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 02:44:44,411 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2398160d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e6d12c3, org.springframework.security.web.header.HeaderWriterFilter@10733bdd, org.springframework.web.filter.CorsFilter@3b50cfcf, org.springframework.security.web.authentication.logout.LogoutFilter@4844f0ca, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@769cdb8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@700a0990, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@770d46eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cd957cb, org.springframework.security.web.session.SessionManagementFilter@1fa21186, org.springframework.security.web.access.ExceptionTranslationFilter@293ff67f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7da848d8]
2020-06-05 02:44:44,466 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 02:44:44,683 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 02:44:44,686 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.461 seconds (JVM running for 4.47)
2020-06-05 02:44:48,554 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 02:44:48,555 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 02:44:48,562 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 02:44:48,600 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 02:45:36,576 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 02:52:38,742 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 02:52:39,045 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 02:58:05,589 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 02:58:05,895 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] couldn't find bearer string, will ignore the header
2020-06-05 03:08:47,948 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-3] couldn't find bearer string, will ignore the header
2020-06-05 03:08:49,261 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:10:33,117 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:10:33,236 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:234}] to localhost:27017 because the pool has been closed.
2020-06-05 03:10:37,619 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 19906 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:10:37,622 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:10:37,663 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:10:37,663 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:10:38,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:10:38,123 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:10:38,137 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:10:38,269 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:10:38,269 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:10:38,312 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:10:38,329 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 60ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:10:38,341 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:10:38,341 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:10:38,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:10:38,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:10:38,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:10:38,352 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:10:38,359 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 18ms. Found 1 Redis repository interfaces.
2020-06-05 03:10:38,678 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,682 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,685 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5d9a968a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,687 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,693 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,693 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:38,694 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:10:39,021 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:10:39,028 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:10:39,029 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:10:39,085 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:10:39,085 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1422 ms
2020-06-05 03:10:39,396 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:10:39,396 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:10:39,433 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed98d7f84437a7a917cc2ef', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:240}] to localhost:27017
2020-06-05 03:10:39,436 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed98d7f84437a7a917cc2ef', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1966657}
2020-06-05 03:10:39,437 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed98d7f84437a7a917cc2ef', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:10:39,576 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:10:39,600 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:241}] to localhost:27017
2020-06-05 03:10:39,846 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:10:40,409 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46a25d97, org.springframework.security.web.context.SecurityContextPersistenceFilter@41dd064c, org.springframework.security.web.header.HeaderWriterFilter@71a474f2, org.springframework.web.filter.CorsFilter@1a833109, org.springframework.security.web.authentication.logout.LogoutFilter@768ba9d2, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@672f22ce, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1165addb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3aef61fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59b71cef, org.springframework.security.web.session.SessionManagementFilter@2fa74ba8, org.springframework.security.web.access.ExceptionTranslationFilter@5f5ead1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@27904d4f]
2020-06-05 03:10:40,450 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:10:40,609 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:10:40,612 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.229 seconds (JVM running for 4.163)
2020-06-05 03:10:48,522 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:10:48,522 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:10:48,529 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 6 ms
2020-06-05 03:10:48,558 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:10:48,898 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:20:56,392 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:20:56,514 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:241}] to localhost:27017 because the pool has been closed.
2020-06-05 03:21:49,516 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 19980 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:21:49,519 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:21:49,572 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:21:49,573 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:21:50,044 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:21:50,045 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:21:50,061 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:21:50,188 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:21:50,188 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:21:50,236 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:21:50,255 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 66ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:21:50,264 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:21:50,265 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:21:50,273 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:21:50,273 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:21:50,274 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:21:50,274 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:21:50,281 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 16ms. Found 1 Redis repository interfaces.
2020-06-05 03:21:50,511 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,514 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,516 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@19dddbd1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,519 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,525 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,525 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,526 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:21:50,757 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:21:50,763 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:21:50,764 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:21:50,821 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:21:50,821 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1248 ms
2020-06-05 03:21:51,111 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:21:51,111 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:21:51,149 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9901f29d76f69399f471f', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:242}] to localhost:27017
2020-06-05 03:21:51,152 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9901f29d76f69399f471f', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2128294}
2020-06-05 03:21:51,153 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9901f29d76f69399f471f', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:21:51,297 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:21:51,324 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:243}] to localhost:27017
2020-06-05 03:21:51,532 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:21:52,177 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2392e709, org.springframework.security.web.context.SecurityContextPersistenceFilter@36ad821e, org.springframework.security.web.header.HeaderWriterFilter@f07e45a, org.springframework.web.filter.CorsFilter@1118d3a8, org.springframework.security.web.authentication.logout.LogoutFilter@1f30d543, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@694e2637, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@535c750b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f14feed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67e4c974, org.springframework.security.web.session.SessionManagementFilter@e5d3002, org.springframework.security.web.access.ExceptionTranslationFilter@2c6e43dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e1937ea]
2020-06-05 03:21:52,228 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:21:52,431 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:21:52,434 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.209 seconds (JVM running for 3.856)
2020-06-05 03:22:01,108 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:22:01,108 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:22:01,115 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:22:01,147 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:22:01,625 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:24:44,400 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:24:44,541 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 03:26:50,858 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 03:26:51,021 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] couldn't find bearer string, will ignore the header
2020-06-05 03:28:05,550 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-4] authenticated user 11130168513, setting security context
2020-06-05 03:28:05,710 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:29:16,164 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] authenticated user 11130168513, setting security context
2020-06-05 03:29:16,322 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 03:30:06,721 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] authenticated user 11130168513, setting security context
2020-06-05 03:30:06,882 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:31:58,531 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-4] couldn't find bearer string, will ignore the header
2020-06-05 03:31:58,676 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:34:16,674 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:34:16,792 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:243}] to localhost:27017 because the pool has been closed.
2020-06-05 03:34:20,448 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20038 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:34:20,451 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:34:20,497 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:34:20,497 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:34:20,928 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:34:20,928 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:34:20,944 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:34:21,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:34:21,077 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:34:21,125 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:34:21,142 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:34:21,150 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:34:21,150 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:34:21,158 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:34:21,158 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:34:21,159 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:34:21,159 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:34:21,166 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15ms. Found 1 Redis repository interfaces.
2020-06-05 03:34:21,390 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,393 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,395 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fb887c0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,397 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,402 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,403 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,404 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:34:21,629 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:34:21,636 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:34:21,636 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:34:21,698 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:34:21,698 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1201 ms
2020-06-05 03:34:21,972 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:34:21,972 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:34:22,010 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9930d533e7f1b795d933c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:254}] to localhost:27017
2020-06-05 03:34:22,013 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9930d533e7f1b795d933c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2125493}
2020-06-05 03:34:22,014 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9930d533e7f1b795d933c', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:34:22,158 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:34:22,185 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:255}] to localhost:27017
2020-06-05 03:34:22,381 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:34:23,047 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29baf5f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@3df6ac2e, org.springframework.security.web.header.HeaderWriterFilter@4f29733a, org.springframework.web.filter.CorsFilter@7af4f078, org.springframework.security.web.authentication.logout.LogoutFilter@15d24949, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@627af16a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@392478ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b40e0d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bf41153, org.springframework.security.web.session.SessionManagementFilter@cd500b7, org.springframework.security.web.access.ExceptionTranslationFilter@64c5bce, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ac68dd4]
2020-06-05 03:34:23,093 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:34:23,279 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:34:23,281 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.083 seconds (JVM running for 3.713)
2020-06-05 03:34:41,791 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:34:41,792 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:34:41,799 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:34:41,831 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:34:42,117 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:35:09,101 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:35:09,223 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:255}] to localhost:27017 because the pool has been closed.
2020-06-05 03:35:13,924 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20073 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:35:13,929 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:35:13,980 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:35:13,980 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:35:14,470 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:14,471 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:35:14,489 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 03:35:14,657 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:14,658 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:35:14,759 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:35:14,786 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 127ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:35:14,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:14,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:35:14,808 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:14,809 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:14,810 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:14,810 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:14,819 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 21ms. Found 1 Redis repository interfaces.
2020-06-05 03:35:15,146 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,150 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,153 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@15a9045f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,154 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,162 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,163 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,164 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:15,449 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:35:15,460 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:35:15,460 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:35:15,522 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:35:15,522 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1542 ms
2020-06-05 03:35:15,802 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:35:15,802 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:35:15,841 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed993434a319373775da620', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:258}] to localhost:27017
2020-06-05 03:35:15,844 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed993434a319373775da620', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2145048}
2020-06-05 03:35:15,845 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed993434a319373775da620', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:35:15,985 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:35:16,008 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:259}] to localhost:27017
2020-06-05 03:35:16,216 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:35:16,785 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f5dc266, org.springframework.security.web.context.SecurityContextPersistenceFilter@58cd6f81, org.springframework.security.web.header.HeaderWriterFilter@28f0d784, org.springframework.web.filter.CorsFilter@505432d0, org.springframework.security.web.authentication.logout.LogoutFilter@6b4b0cbf, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@7f529924, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@62617d49, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@142dc4a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f86dd18, org.springframework.security.web.session.SessionManagementFilter@480977e0, org.springframework.security.web.access.ExceptionTranslationFilter@f62a831, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f226516]
2020-06-05 03:35:16,833 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:35:17,007 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:35:17,010 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.473 seconds (JVM running for 4.505)
2020-06-05 03:35:23,111 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:35:23,112 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:35:23,118 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 6 ms
2020-06-05 03:35:23,296 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] authenticated user 11130168513, setting security context
2020-06-05 03:35:23,586 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:35:33,681 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:35:33,828 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:259}] to localhost:27017 because the pool has been closed.
2020-06-05 03:35:38,935 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20085 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:35:38,938 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:35:38,981 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:35:38,981 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:35:39,422 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:39,423 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:35:39,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 3ms. Found 0 Redis repository interfaces.
2020-06-05 03:35:39,543 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:39,543 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:35:39,583 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:35:39,597 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:35:39,603 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:35:39,603 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:35:39,610 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:39,610 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:39,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:39,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:35:39,617 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13ms. Found 1 Redis repository interfaces.
2020-06-05 03:35:39,860 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,862 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,864 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b71b01f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,867 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,872 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,872 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:39,873 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:35:40,087 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:35:40,094 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:35:40,094 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:35:40,151 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:35:40,152 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1171 ms
2020-06-05 03:35:40,420 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:35:40,420 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:35:40,458 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9935c41f8336e655b623d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:260}] to localhost:27017
2020-06-05 03:35:40,461 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9935c41f8336e655b623d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1975664}
2020-06-05 03:35:40,462 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9935c41f8336e655b623d', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:35:40,605 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:35:40,628 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:261}] to localhost:27017
2020-06-05 03:35:40,825 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:35:41,433 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33b3b583, org.springframework.security.web.context.SecurityContextPersistenceFilter@74641efb, org.springframework.security.web.header.HeaderWriterFilter@6ffeb9df, org.springframework.web.filter.CorsFilter@9ab58db, org.springframework.security.web.authentication.logout.LogoutFilter@799108ac, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@9eb9248, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@551c3432, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@72fa594a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37735b1, org.springframework.security.web.session.SessionManagementFilter@4ce5f04e, org.springframework.security.web.access.ExceptionTranslationFilter@5be4b175, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a2879ec]
2020-06-05 03:35:41,485 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:35:41,686 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:35:41,689 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.133 seconds (JVM running for 4.172)
2020-06-05 03:36:06,832 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:36:06,833 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:36:06,839 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 6 ms
2020-06-05 03:36:06,998 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] authenticated user 11130168513, setting security context
2020-06-05 03:36:07,285 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:41:12,051 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:41:12,172 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:261}] to localhost:27017 because the pool has been closed.
2020-06-05 03:41:16,058 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20139 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:41:16,060 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:41:16,100 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:41:16,100 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:41:16,486 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:41:16,486 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:41:16,503 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:41:16,634 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:41:16,635 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:41:16,684 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:41:16,703 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:41:16,711 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:41:16,711 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:41:16,719 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:41:16,720 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:41:16,720 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:41:16,721 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:41:16,730 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 18ms. Found 1 Redis repository interfaces.
2020-06-05 03:41:17,003 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,006 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,009 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6fa15dd7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,011 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,017 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,017 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,018 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:41:17,247 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:41:17,254 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:41:17,254 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:41:17,316 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:41:17,316 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1216 ms
2020-06-05 03:41:17,611 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:41:17,611 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:41:17,649 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed994add1a23138bf891cd4', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:264}] to localhost:27017
2020-06-05 03:41:17,653 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed994add1a23138bf891cd4', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2064330}
2020-06-05 03:41:17,653 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed994add1a23138bf891cd4', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:41:17,796 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:41:17,820 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:265}] to localhost:27017
2020-06-05 03:41:18,025 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:41:18,629 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2108f2ca, org.springframework.security.web.context.SecurityContextPersistenceFilter@68900cb9, org.springframework.security.web.header.HeaderWriterFilter@7855a319, org.springframework.web.filter.CorsFilter@d9294c9, org.springframework.security.web.authentication.logout.LogoutFilter@359b1580, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@52e0beb4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fbdf844, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ffdc627, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2936b03c, org.springframework.security.web.session.SessionManagementFilter@49f68824, org.springframework.security.web.access.ExceptionTranslationFilter@6b377d01, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@317db0fb]
2020-06-05 03:41:18,677 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:41:18,864 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:41:18,867 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.051 seconds (JVM running for 3.626)
2020-06-05 03:41:35,196 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:41:35,197 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:41:35,204 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:41:35,235 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:41:39,170 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:44:38,584 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:44:38,701 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:265}] to localhost:27017 because the pool has been closed.
2020-06-05 03:44:42,449 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20162 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:44:42,451 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:44:42,491 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:44:42,491 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:44:42,900 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:44:42,901 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:44:42,918 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:44:43,046 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:44:43,046 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:44:43,091 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:44:43,107 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 60ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:44:43,115 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:44:43,116 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:44:43,123 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:44:43,124 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:44:43,125 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:44:43,125 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:44:43,132 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15ms. Found 1 Redis repository interfaces.
2020-06-05 03:44:43,364 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,366 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,369 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a4e165e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,370 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,376 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,376 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,377 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:44:43,586 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:44:43,593 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:44:43,593 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:44:43,650 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:44:43,650 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1159 ms
2020-06-05 03:44:43,930 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:44:43,930 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:44:43,968 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9957bee295a1c380b9534', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:266}] to localhost:27017
2020-06-05 03:44:43,972 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9957bee295a1c380b9534', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2037874}
2020-06-05 03:44:43,972 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9957bee295a1c380b9534', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:44:44,125 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:44:44,153 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:267}] to localhost:27017
2020-06-05 03:44:44,348 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:44:44,898 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e2d204d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7286e6bb, org.springframework.security.web.header.HeaderWriterFilter@6c8c9a4b, org.springframework.web.filter.CorsFilter@281b450, org.springframework.security.web.authentication.logout.LogoutFilter@2bb752f2, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@746e675d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@736c593d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c3a8a40, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73bcadff, org.springframework.security.web.session.SessionManagementFilter@183db9e4, org.springframework.security.web.access.ExceptionTranslationFilter@d5dbf0f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6fa87448]
2020-06-05 03:44:44,940 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:44:45,113 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:44:45,116 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 2.907 seconds (JVM running for 3.493)
2020-06-05 03:44:59,597 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:44:59,598 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:44:59,604 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 6 ms
2020-06-05 03:44:59,623 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:45:02,862 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] authenticated user 11130168513, setting security context
2020-06-05 03:45:05,894 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-3] couldn't find bearer string, will ignore the header
2020-06-05 03:46:24,583 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 03:46:27,760 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] authenticated user 11130168513, setting security context
2020-06-05 03:46:27,939 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] couldn't find bearer string, will ignore the header
2020-06-05 03:46:37,129 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] authenticated user 11130168513, setting security context
2020-06-05 03:46:37,298 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] couldn't find bearer string, will ignore the header
2020-06-05 03:46:46,223 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:46:46,343 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:267}] to localhost:27017 because the pool has been closed.
2020-06-05 03:46:49,804 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20174 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:46:49,807 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:46:49,858 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:46:49,859 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:46:50,343 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:46:50,344 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:46:50,360 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:46:50,516 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:46:50,516 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:46:50,566 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:46:50,585 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:46:50,592 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:46:50,593 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:46:50,600 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:46:50,601 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:46:50,602 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:46:50,602 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:46:50,609 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 16ms. Found 1 Redis repository interfaces.
2020-06-05 03:46:50,914 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,916 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,919 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4c150e45' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,921 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,928 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,928 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:50,929 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:46:51,184 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:46:51,191 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:46:51,191 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:46:51,247 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:46:51,247 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1386 ms
2020-06-05 03:46:51,515 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:46:51,515 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:46:51,553 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed995fb2432ec0dcbc8b639', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:268}] to localhost:27017
2020-06-05 03:46:51,556 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed995fb2432ec0dcbc8b639', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2031961}
2020-06-05 03:46:51,557 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed995fb2432ec0dcbc8b639', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:46:51,696 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:46:51,719 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:269}] to localhost:27017
2020-06-05 03:46:51,917 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:46:52,456 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66bb3b61, org.springframework.security.web.context.SecurityContextPersistenceFilter@79f7a73a, org.springframework.security.web.header.HeaderWriterFilter@62eeee25, org.springframework.web.filter.CorsFilter@6e8b721f, org.springframework.security.web.authentication.logout.LogoutFilter@268b63e2, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@4cec05c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7539ef75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1165addb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2dfd6f2, org.springframework.security.web.session.SessionManagementFilter@2af0c466, org.springframework.security.web.access.ExceptionTranslationFilter@6058dee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11d5c166]
2020-06-05 03:46:52,503 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:46:52,679 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:46:52,682 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.353 seconds (JVM running for 4.399)
2020-06-05 03:47:10,271 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:47:10,271 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:47:10,278 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:47:10,439 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] authenticated user 11130168513, setting security context
2020-06-05 03:47:10,744 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:47:20,197 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-3] authenticated user 11130168513, setting security context
2020-06-05 03:47:20,355 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-4] couldn't find bearer string, will ignore the header
2020-06-05 03:48:33,528 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] authenticated user 11130168513, setting security context
2020-06-05 03:48:33,676 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] couldn't find bearer string, will ignore the header
2020-06-05 03:49:04,620 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] authenticated user 11130168513, setting security context
2020-06-05 03:51:42,983 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:51:43,092 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:51:43,106 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:269}] to localhost:27017 because the pool has been closed.
2020-06-05 03:51:47,620 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20207 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:51:47,622 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:51:47,667 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:51:47,667 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:51:48,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:51:48,077 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:51:48,093 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:51:48,230 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:51:48,231 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:51:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:51:48,308 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 76ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:51:48,317 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:51:48,317 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:51:48,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:51:48,326 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:51:48,326 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:51:48,327 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:51:48,334 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 03:51:48,600 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,603 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,605 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1e2ffdbd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,608 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,613 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,614 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,615 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:51:48,852 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:51:48,860 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:51:48,860 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:51:48,924 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:51:48,924 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1257 ms
2020-06-05 03:51:49,226 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:51:49,226 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:51:49,263 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9972567aefa303ad43378', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:270}] to localhost:27017
2020-06-05 03:51:49,267 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9972567aefa303ad43378', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2045300}
2020-06-05 03:51:49,267 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9972567aefa303ad43378', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:51:49,405 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:51:49,427 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:271}] to localhost:27017
2020-06-05 03:51:49,623 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:51:50,170 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470862a6, org.springframework.security.web.context.SecurityContextPersistenceFilter@65efa6c, org.springframework.security.web.header.HeaderWriterFilter@3a63a7cd, org.springframework.web.filter.CorsFilter@5c65ae0, org.springframework.security.web.authentication.logout.LogoutFilter@550d35ef, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@7ce3e695, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc8b03c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34370757, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3aadee68, org.springframework.security.web.session.SessionManagementFilter@510a54ac, org.springframework.security.web.access.ExceptionTranslationFilter@3d49e7d3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d89cc18]
2020-06-05 03:51:50,217 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:51:50,404 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:51:50,406 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.053 seconds (JVM running for 3.708)
2020-06-05 03:52:04,420 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:52:04,420 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:52:04,427 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:52:04,443 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:52:04,989 ERROR com.okanciftci.cukatify.spotify.SpotifyLoginHelper [http-nio-8090-exec-1] Error: Invalid authorization code
2020-06-05 03:52:05,313 ERROR com.okanciftci.cukatify.spotify.impl.SpotifyAPIServiceImpl [http-nio-8090-exec-1] Error: Invalid access token
2020-06-05 03:52:05,323 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8090-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.okanciftci.cukatify.controllers.SpotifyController.accessSpotifyPageWithCallback(SpotifyController.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:69)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-05 03:52:18,239 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:52:18,361 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:271}] to localhost:27017 because the pool has been closed.
2020-06-05 03:52:21,386 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20219 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:52:21,389 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:52:21,484 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:52:21,485 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:52:21,940 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:52:21,940 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:52:21,956 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:52:22,075 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:52:22,075 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:52:22,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:52:22,134 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:52:22,141 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:52:22,141 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:52:22,156 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:52:22,156 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:52:22,157 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:52:22,158 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:52:22,165 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 23ms. Found 1 Redis repository interfaces.
2020-06-05 03:52:22,496 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,498 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,500 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@303ced1b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,502 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,507 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,507 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,508 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:52:22,857 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:52:22,863 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:52:22,863 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:52:22,915 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:52:22,915 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1429 ms
2020-06-05 03:52:23,196 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:52:23,197 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:52:23,235 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed9974739df093098ec0691', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:272}] to localhost:27017
2020-06-05 03:52:23,238 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9974739df093098ec0691', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2031414}
2020-06-05 03:52:23,239 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed9974739df093098ec0691', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:52:23,378 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:52:23,402 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:273}] to localhost:27017
2020-06-05 03:52:23,665 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:52:24,207 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@317aa7b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@1eecac53, org.springframework.security.web.header.HeaderWriterFilter@dbe0c7, org.springframework.web.filter.CorsFilter@13601ab9, org.springframework.security.web.authentication.logout.LogoutFilter@15738c59, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@260d4d7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a725af9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b22244d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b21bf72, org.springframework.security.web.session.SessionManagementFilter@4404c3a1, org.springframework.security.web.access.ExceptionTranslationFilter@753f9bf7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@217a7b0c]
2020-06-05 03:52:24,248 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:52:24,408 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:52:24,411 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.281 seconds (JVM running for 4.284)
2020-06-05 03:52:28,583 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:52:28,584 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:52:28,591 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 03:52:28,623 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 03:52:46,809 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:54:04,744 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:54:10,874 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] authenticated user 11130168513, setting security context
2020-06-05 03:54:14,300 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] couldn't find bearer string, will ignore the header
2020-06-05 03:54:55,851 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 03:54:55,969 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:273}] to localhost:27017 because the pool has been closed.
2020-06-05 03:55:00,201 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20232 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 03:55:00,205 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 03:55:00,262 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 03:55:00,262 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 03:55:00,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:55:00,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:55:00,822 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 03:55:00,953 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:55:00,954 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 03:55:01,010 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 03:55:01,034 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 80ms. Found 4 MongoDB repository interfaces.
2020-06-05 03:55:01,044 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 03:55:01,044 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 03:55:01,054 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:55:01,054 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:55:01,055 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:55:01,056 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 03:55:01,065 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 20ms. Found 1 Redis repository interfaces.
2020-06-05 03:55:01,380 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,383 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,385 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@66ebdbf1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,387 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,392 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,392 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,393 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 03:55:01,643 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 03:55:01,649 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 03:55:01,649 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 03:55:01,709 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 03:55:01,709 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1447 ms
2020-06-05 03:55:02,056 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 03:55:02,057 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 03:55:02,118 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed997e65718063f0daaf476', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:274}] to localhost:27017
2020-06-05 03:55:02,125 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed997e65718063f0daaf476', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4032754}
2020-06-05 03:55:02,126 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed997e65718063f0daaf476', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 03:55:02,399 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 03:55:02,437 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:275}] to localhost:27017
2020-06-05 03:55:02,651 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 03:55:03,255 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@547383d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c31ceb0, org.springframework.security.web.header.HeaderWriterFilter@34a38410, org.springframework.web.filter.CorsFilter@3da586b5, org.springframework.security.web.authentication.logout.LogoutFilter@52d34702, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@7cec9a89, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b244e2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1eb5515d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@254bbaed, org.springframework.security.web.session.SessionManagementFilter@42a732c9, org.springframework.security.web.access.ExceptionTranslationFilter@1f754d48, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62d01665]
2020-06-05 03:55:03,304 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 03:55:03,495 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 03:55:03,498 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.62 seconds (JVM running for 4.316)
2020-06-05 03:55:13,900 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 03:55:13,900 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 03:55:13,906 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 6 ms
2020-06-05 03:55:14,073 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] authenticated user 11130168513, setting security context
2020-06-05 03:55:14,365 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 03:57:22,728 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 03:57:22,936 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 03:58:50,540 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] authenticated user 11130168513, setting security context
2020-06-05 03:58:50,707 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 04:11:04,537 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-4] couldn't find bearer string, will ignore the header
2020-06-05 04:11:04,939 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 04:11:21,113 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 04:11:21,283 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] couldn't find bearer string, will ignore the header
2020-06-05 04:11:23,711 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] couldn't find bearer string, will ignore the header
2020-06-05 04:11:23,863 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 04:12:38,014 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 04:12:38,136 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:275}] to localhost:27017 because the pool has been closed.
2020-06-05 04:12:42,739 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Starting CukatifyApplication on okan-MBP with PID 20421 (/Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify/target/classes started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 04:12:42,742 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-06-05 04:12:42,806 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-05 04:12:42,806 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-05 04:12:43,229 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 04:12:43,229 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 04:12:43,244 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2020-06-05 04:12:43,357 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 04:12:43,357 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 04:12:43,400 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 04:12:43,415 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 4 MongoDB repository interfaces.
2020-06-05 04:12:43,422 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 04:12:43,422 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 04:12:43,429 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 04:12:43,429 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 04:12:43,430 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 04:12:43,430 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 04:12:43,441 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 04:12:43,784 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,786 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,789 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@739e1f09' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,791 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,797 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,797 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:43,798 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 04:12:44,157 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8090 (http)
2020-06-05 04:12:44,165 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-06-05 04:12:44,166 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-06-05 04:12:44,225 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-06-05 04:12:44,225 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 1419 ms
2020-06-05 04:12:44,537 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 04:12:44,537 INFO org.mongodb.driver.cluster [restartedMain] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 04:12:44,575 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5ed99c0c62841921df1b19f4', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:284}] to localhost:27017
2020-06-05 04:12:44,578 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed99c0c62841921df1b19f4', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1994029}
2020-06-05 04:12:44,579 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5ed99c0c62841921df1b19f4', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 04:12:44,729 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [restartedMain] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 04:12:44,758 INFO org.mongodb.driver.connection [restartedMain] Opened connection [connectionId{localValue:2, serverValue:285}] to localhost:27017
2020-06-05 04:12:45,004 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-06-05 04:12:45,559 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79df6c96, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ea51a23, org.springframework.security.web.header.HeaderWriterFilter@a206aab, org.springframework.web.filter.CorsFilter@b05f2b8, org.springframework.security.web.authentication.logout.LogoutFilter@2c8f44bd, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@12ed555d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26dc096e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f007bb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@579733e2, org.springframework.security.web.session.SessionManagementFilter@69d58dbc, org.springframework.security.web.access.ExceptionTranslationFilter@5b2683cd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76e22609]
2020-06-05 04:12:45,601 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 04:12:45,778 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8090 (http) with context path ''
2020-06-05 04:12:45,781 INFO com.okanciftci.cukatify.CukatifyApplication [restartedMain] Started CukatifyApplication in 3.326 seconds (JVM running for 4.332)
2020-06-05 04:13:21,313 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-05 04:13:21,313 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Initializing Servlet 'dispatcherServlet'
2020-06-05 04:13:21,320 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8090-exec-1] Completed initialization in 7 ms
2020-06-05 04:13:21,352 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 04:13:21,643 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 04:13:46,184 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-3] authenticated user face1247@hotmail.com, setting security context
2020-06-05 04:13:46,368 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-4] couldn't find bearer string, will ignore the header
2020-06-05 04:16:31,104 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] couldn't find bearer string, will ignore the header
2020-06-05 04:16:31,273 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] couldn't find bearer string, will ignore the header
2020-06-05 04:17:54,302 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] authenticated user face1247@hotmail.com, setting security context
2020-06-05 04:17:54,481 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 04:21:32,613 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 04:21:32,777 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 04:35:19,764 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 04:35:20,051 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] couldn't find bearer string, will ignore the header
2020-06-05 04:36:05,352 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 04:36:05,505 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 04:41:31,178 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 04:41:31,329 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] authenticated user TobyReinold@gmail.com, setting security context
2020-06-05 04:41:42,052 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-10] authenticated user TobyReinold@gmail.com, setting security context
2020-06-05 04:41:42,419 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 04:43:50,676 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-3] couldn't find bearer string, will ignore the header
2020-06-05 04:43:50,834 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 04:46:25,098 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-9] couldn't find bearer string, will ignore the header
2020-06-05 04:48:18,622 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-1] couldn't find bearer string, will ignore the header
2020-06-05 04:48:18,939 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-2] couldn't find bearer string, will ignore the header
2020-06-05 04:49:44,642 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-5] couldn't find bearer string, will ignore the header
2020-06-05 04:49:44,842 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-6] couldn't find bearer string, will ignore the header
2020-06-05 04:50:43,206 INFO com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-7] authenticated user face1247@hotmail.com, setting security context
2020-06-05 04:50:43,350 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [http-nio-8090-exec-8] couldn't find bearer string, will ignore the header
2020-06-05 04:52:31,799 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 04:52:31,918 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:285}] to localhost:27017 because the pool has been closed.
2020-06-05 14:57:57,665 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22113 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 14:57:57,666 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 14:57:58,128 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 14:57:58,130 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 14:57:58,340 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 14:57:58,367 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 232ms. Found 4 MongoDB repository interfaces.
2020-06-05 14:57:59,224 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 14:57:59,224 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 14:57:59,270 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda33479fe4783cc0f4e8a8', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:293}] to localhost:27017
2020-06-05 14:57:59,273 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda33479fe4783cc0f4e8a8', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2230291}
2020-06-05 14:57:59,274 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda33479fe4783cc0f4e8a8', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 14:57:59,504 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 14:57:59,549 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:294}] to localhost:27017
2020-06-05 14:57:59,789 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 2.475 seconds (JVM running for 4.132)
2020-06-05 14:57:59,828 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14028087] to prepare test instance [com.okanciftci.cukatify.unit_integration.CategoryServiceTest@502a4156]
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.okanciftci.cukatify.unit_integration.CategoryServiceTest': Unsatisfied dependency expressed through field 'categoryService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:393)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:119)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 67 common frames omitted
2020-06-05 14:57:59,877 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:294}] to localhost:27017 because the pool has been closed.
2020-06-05 15:01:16,656 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22152 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:01:16,660 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:01:17,059 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:01:17,061 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:01:17,301 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:01:17,323 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 256ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:01:18,126 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:01:18,127 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:01:18,174 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda340e738bd0160b129726', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:295}] to localhost:27017
2020-06-05 15:01:18,178 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda340e738bd0160b129726', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2382607}
2020-06-05 15:01:18,178 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda340e738bd0160b129726', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:01:18,421 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:01:18,458 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:296}] to localhost:27017
2020-06-05 15:01:18,732 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 2.445 seconds (JVM running for 3.78)
2020-06-05 15:01:18,765 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14028087] to prepare test instance [com.okanciftci.cukatify.unit_integration.CategoryServiceTest@441fbe89]
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.okanciftci.cukatify.unit_integration.CategoryServiceTest': Unsatisfied dependency expressed through field 'categoryService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:393)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:119)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 67 common frames omitted
2020-06-05 15:01:18,798 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:296}] to localhost:27017 because the pool has been closed.
2020-06-05 15:02:38,870 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22156 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:02:38,873 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:02:39,279 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:02:39,281 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:02:39,467 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:02:39,505 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 219ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:02:39,980 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:02:39,980 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:02:40,090 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda345f96ef7d3932807f5a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:297}] to localhost:27017
2020-06-05 15:02:40,094 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda345f96ef7d3932807f5a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2354805}
2020-06-05 15:02:40,094 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda345f96ef7d3932807f5a', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:02:40,341 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:02:40,374 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:298}] to localhost:27017
2020-06-05 15:02:40,541 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 2.025 seconds (JVM running for 4.5)
2020-06-05 15:02:40,561 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@47a5b70d] to prepare test instance [com.okanciftci.cukatify.unit_integration.CategoryServiceTest@4212a0c8]
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.okanciftci.cukatify.unit_integration.CategoryServiceTest': Unsatisfied dependency expressed through field 'categoryService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:393)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:119)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.abstr.CategoryService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 67 common frames omitted
2020-06-05 15:02:40,594 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:298}] to localhost:27017 because the pool has been closed.
2020-06-05 15:05:14,091 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22179 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:05:14,093 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:05:14,651 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:05:14,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:05:14,683 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-06-05 15:05:14,914 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:05:14,914 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:05:15,096 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:05:15,114 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 200ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:05:15,126 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:05:15,127 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:05:15,140 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:05:15,141 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:05:15,141 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:05:15,142 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:05:15,149 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 15:05:15,664 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,668 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,669 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@71664560' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,675 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,679 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,683 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:15,685 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:05:16,534 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:05:16,535 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:05:16,598 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda34fc02ba1b5a90c593a9', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:299}] to localhost:27017
2020-06-05 15:05:16,602 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda34fc02ba1b5a90c593a9', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2543892}
2020-06-05 15:05:16,603 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda34fc02ba1b5a90c593a9', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:05:16,755 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:05:16,804 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:300}] to localhost:27017
2020-06-05 15:05:17,190 WARN org.springframework.web.context.support.GenericWebApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secureUserController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
2020-06-05 15:05:17,192 INFO org.mongodb.driver.connection [main] Closed connection [connectionId{localValue:2, serverValue:300}] to localhost:27017 because the pool has been closed.
2020-06-05 15:05:17,316 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-05 15:05:17,324 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secureUserController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 116 common frames omitted
2020-06-05 15:05:17,327 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4c51bb7] to prepare test instance [com.okanciftci.cukatify.unit_integration.CategoryServiceTest@2a65e237]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743)
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'secureUserController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'passwordEncoder'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'passwordEncoder': Requested bean is currently in creation: Is there an unresolvable circular reference?
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 116 common frames omitted
2020-06-05 15:06:15,219 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22189 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:06:15,220 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:06:15,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:06:15,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:06:15,816 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:06:16,010 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:06:16,011 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:06:16,191 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:06:16,210 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 199ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:06:16,224 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:06:16,225 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:06:16,238 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:06:16,239 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:06:16,240 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:06:16,241 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:06:16,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 29ms. Found 1 Redis repository interfaces.
2020-06-05 15:06:16,805 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,811 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,812 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5bcec67e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,819 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,825 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,829 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:16,833 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:06:17,705 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:06:17,705 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:06:17,776 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda35397e21d6165267abdb', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:301}] to localhost:27017
2020-06-05 15:06:17,781 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35397e21d6165267abdb', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3610746}
2020-06-05 15:06:17,782 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35397e21d6165267abdb', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:06:17,948 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:06:18,025 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:302}] to localhost:27017
2020-06-05 15:06:18,998 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68f79b7c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a9df5, org.springframework.security.web.header.HeaderWriterFilter@41f40dfa, org.springframework.web.filter.CorsFilter@37142579, org.springframework.security.web.authentication.logout.LogoutFilter@77d54a41, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@264576e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48f4f03e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1dd443c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@86bf90b, org.springframework.security.web.session.SessionManagementFilter@1bd59b82, org.springframework.security.web.access.ExceptionTranslationFilter@2c3679e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b7e4b20]
2020-06-05 15:06:19,263 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:06:19,640 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 4.747 seconds (JVM running for 6.24)
2020-06-05 15:06:28,027 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:06:28,031 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:302}] to localhost:27017 because the pool has been closed.
2020-06-05 15:07:15,545 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22193 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:07:15,546 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:07:16,232 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:16,233 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:07:16,257 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:07:16,440 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:16,440 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:07:16,626 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:07:16,650 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 209ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:07:16,664 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:16,664 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:07:16,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:16,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:16,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:16,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:16,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 15:07:17,188 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,192 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,193 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@cc9ef8d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,198 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,204 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,207 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:17,210 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:18,032 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:07:18,032 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:07:18,133 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda35768c812e76718f84c6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:303}] to localhost:27017
2020-06-05 15:07:18,138 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35768c812e76718f84c6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3507934}
2020-06-05 15:07:18,139 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35768c812e76718f84c6', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:07:18,308 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:07:18,361 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:304}] to localhost:27017
2020-06-05 15:07:19,309 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23c00420, org.springframework.security.web.context.SecurityContextPersistenceFilter@57a5b03, org.springframework.security.web.header.HeaderWriterFilter@50b38342, org.springframework.web.filter.CorsFilter@22f046b, org.springframework.security.web.authentication.logout.LogoutFilter@5ca4c88a, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@215a329c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@558127d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12532e37, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20723ee, org.springframework.security.web.session.SessionManagementFilter@11582db6, org.springframework.security.web.access.ExceptionTranslationFilter@30665461, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b5c9412]
2020-06-05 15:07:19,562 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:07:19,889 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 4.666 seconds (JVM running for 6.568)
2020-06-05 15:07:20,152 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:07:20,156 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:304}] to localhost:27017 because the pool has been closed.
2020-06-05 15:07:33,894 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22197 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:07:33,895 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:07:34,531 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:34,532 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:07:34,553 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:07:34,728 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:34,728 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:07:34,937 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:07:34,956 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 227ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:07:34,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:07:34,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:07:34,974 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:34,975 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:34,976 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:34,976 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:07:34,983 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 15:07:35,488 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,492 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,493 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29013ef2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,498 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,503 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,506 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:35,509 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:07:36,345 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:07:36,345 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:07:36,417 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda35888c2be339965961c4', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:305}] to localhost:27017
2020-06-05 15:07:36,422 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35888c2be339965961c4', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3178189}
2020-06-05 15:07:36,424 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35888c2be339965961c4', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:07:36,584 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:07:36,645 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:306}] to localhost:27017
2020-06-05 15:07:37,589 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5614ae05, org.springframework.security.web.context.SecurityContextPersistenceFilter@19e8fe55, org.springframework.security.web.header.HeaderWriterFilter@22f80e36, org.springframework.web.filter.CorsFilter@54970127, org.springframework.security.web.authentication.logout.LogoutFilter@3d7314b3, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@3c4c7e51, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d7bb5cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@322ab6ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@749ee0e3, org.springframework.security.web.session.SessionManagementFilter@114badf0, org.springframework.security.web.access.ExceptionTranslationFilter@70ed902a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1df32c09]
2020-06-05 15:07:37,856 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:07:38,224 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 4.638 seconds (JVM running for 6.208)
2020-06-05 15:07:46,025 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:07:46,031 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:306}] to localhost:27017 because the pool has been closed.
2020-06-05 15:08:52,536 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22200 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:08:52,538 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:08:53,401 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:08:53,405 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:08:53,434 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:08:53,940 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:08:53,940 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:08:54,155 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:08:54,181 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 240ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:08:54,191 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:08:54,191 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:08:54,201 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:08:54,202 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:08:54,203 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:08:54,204 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:08:54,211 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 15:08:54,753 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,757 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,758 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4dad8ec0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,764 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,769 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,772 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:54,775 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:08:55,662 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:08:55,662 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:08:55,729 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda35d77ced8207d4a33236', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:307}] to localhost:27017
2020-06-05 15:08:55,735 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35d77ced8207d4a33236', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3386677}
2020-06-05 15:08:55,737 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda35d77ced8207d4a33236', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:08:55,901 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:08:55,952 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:308}] to localhost:27017
2020-06-05 15:08:56,889 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3aeb267, org.springframework.security.web.context.SecurityContextPersistenceFilter@96be1ae, org.springframework.security.web.header.HeaderWriterFilter@4ae2c01b, org.springframework.web.filter.CorsFilter@13a9cdae, org.springframework.security.web.authentication.logout.LogoutFilter@50b38342, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@1c972ae6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6eb5b9e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38b54694, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62a41279, org.springframework.security.web.session.SessionManagementFilter@3c3cd7a5, org.springframework.security.web.access.ExceptionTranslationFilter@18d22ecf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e12c5de]
2020-06-05 15:08:57,187 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:08:57,549 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 5.392 seconds (JVM running for 7.167)
2020-06-05 15:08:57,906 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:08:57,914 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:308}] to localhost:27017 because the pool has been closed.
2020-06-05 15:12:15,615 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Starting PostServiceTest on okan-MBP with PID 22225 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:12:15,616 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:12:16,274 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:16,275 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:12:16,293 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 15:12:16,453 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:16,454 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:12:16,637 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:12:16,660 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 206ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:12:16,670 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:16,671 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:12:16,681 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:16,682 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:16,683 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:16,683 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:16,690 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 15:12:17,144 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,147 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,148 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@34d52ecd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,153 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,158 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,161 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,163 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:17,936 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:12:17,936 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:12:17,991 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda36a13f4671086c6ff484', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:315}] to localhost:27017
2020-06-05 15:12:17,995 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda36a13f4671086c6ff484', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2552740}
2020-06-05 15:12:17,996 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda36a13f4671086c6ff484', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:12:18,137 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:12:18,180 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:316}] to localhost:27017
2020-06-05 15:12:18,988 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d70f312, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d7ad0f5, org.springframework.security.web.header.HeaderWriterFilter@37c7766e, org.springframework.web.filter.CorsFilter@4c7d7430, org.springframework.security.web.authentication.logout.LogoutFilter@64f4f12, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@4ea1aa52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49a38b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69a40b3c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74123110, org.springframework.security.web.session.SessionManagementFilter@bbb6f0, org.springframework.security.web.access.ExceptionTranslationFilter@34279b8a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b30a54e]
2020-06-05 15:12:19,218 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:12:19,543 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Started PostServiceTest in 4.22 seconds (JVM running for 5.653)
2020-06-05 15:12:19,814 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:12:19,817 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:316}] to localhost:27017 because the pool has been closed.
2020-06-05 15:12:27,291 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Starting PostServiceTest on okan-MBP with PID 22228 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:12:27,292 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:12:28,040 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:28,041 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:12:28,061 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:12:28,215 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:28,216 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:12:28,405 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:12:28,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 215ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:12:28,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:12:28,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:12:28,452 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:28,452 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:28,453 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:28,453 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:12:28,460 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 15:12:28,954 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,959 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,960 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31a136a6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,966 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,972 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,975 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:28,979 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:12:29,804 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:12:29,804 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:12:29,874 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda36ad29bd734667162796', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:317}] to localhost:27017
2020-06-05 15:12:29,881 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda36ad29bd734667162796', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4375340}
2020-06-05 15:12:29,883 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda36ad29bd734667162796', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:12:30,063 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:12:30,115 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:318}] to localhost:27017
2020-06-05 15:12:31,102 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69944a90, org.springframework.security.web.context.SecurityContextPersistenceFilter@43090195, org.springframework.security.web.header.HeaderWriterFilter@1031c1a0, org.springframework.web.filter.CorsFilter@1ed52f44, org.springframework.security.web.authentication.logout.LogoutFilter@3c65f00e, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@771afdd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fc28e5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@415262a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3abadb65, org.springframework.security.web.session.SessionManagementFilter@4d0b7fd5, org.springframework.security.web.access.ExceptionTranslationFilter@4aba7617, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6843fdc4]
2020-06-05 15:12:31,341 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:12:31,660 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Started PostServiceTest in 4.716 seconds (JVM running for 6.361)
2020-06-05 15:36:33,953 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:36:33,959 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:318}] to localhost:27017 because the pool has been closed.
2020-06-05 15:36:53,366 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Starting PostServiceTest on okan-MBP with PID 22257 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:36:53,367 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:36:53,977 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:36:53,978 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:36:54,012 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-06-05 15:36:54,252 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:36:54,253 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:36:54,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:36:54,445 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 192ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:36:54,455 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:36:54,455 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:36:54,469 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:36:54,470 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:36:54,471 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:36:54,471 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:36:54,481 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 25ms. Found 1 Redis repository interfaces.
2020-06-05 15:36:55,028 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,034 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,036 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@335f5c69' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,042 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,048 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,051 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,055 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:36:55,865 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:36:55,866 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:36:55,924 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda3c677f180e7282bb5b5f', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:319}] to localhost:27017
2020-06-05 15:36:55,930 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3c677f180e7282bb5b5f', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3089360}
2020-06-05 15:36:55,931 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3c677f180e7282bb5b5f', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:36:56,098 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:36:56,145 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:320}] to localhost:27017
2020-06-05 15:36:57,069 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1aaaabd1, org.springframework.security.web.context.SecurityContextPersistenceFilter@a7ae340, org.springframework.security.web.header.HeaderWriterFilter@78743dd8, org.springframework.web.filter.CorsFilter@7cbe3a05, org.springframework.security.web.authentication.logout.LogoutFilter@e895e3e, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@40b70f31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e8bd498, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c048b30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3adde4ea, org.springframework.security.web.session.SessionManagementFilter@35cbeb54, org.springframework.security.web.access.ExceptionTranslationFilter@6d7e2795, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ac25dbb]
2020-06-05 15:36:57,323 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:36:57,689 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Started PostServiceTest in 4.626 seconds (JVM running for 6.02)
2020-06-05 15:36:57,993 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:36:57,997 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:320}] to localhost:27017 because the pool has been closed.
2020-06-05 15:46:29,072 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Starting PostServiceTest on okan-MBP with PID 22281 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:46:29,074 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:46:30,003 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:46:30,004 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:46:30,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:46:30,230 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:46:30,230 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:46:30,435 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:46:30,457 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 226ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:46:30,472 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:46:30,472 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:46:30,480 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:46:30,481 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:46:30,482 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:46:30,482 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:46:30,488 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 15ms. Found 1 Redis repository interfaces.
2020-06-05 15:46:30,972 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,976 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,978 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6b2e46af' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,983 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,988 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,995 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:30,999 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:46:31,903 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:46:31,903 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:46:31,987 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda3ea7dc75c9452cb6ca5f', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:321}] to localhost:27017
2020-06-05 15:46:31,992 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3ea7dc75c9452cb6ca5f', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3084853}
2020-06-05 15:46:31,993 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3ea7dc75c9452cb6ca5f', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:46:32,179 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:46:32,234 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:322}] to localhost:27017
2020-06-05 15:46:33,234 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f193335, org.springframework.security.web.context.SecurityContextPersistenceFilter@6314df3c, org.springframework.security.web.header.HeaderWriterFilter@69a40b3c, org.springframework.web.filter.CorsFilter@19002b34, org.springframework.security.web.authentication.logout.LogoutFilter@4a2bf50f, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@1ec88aa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10b8b900, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@599f1b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e6748ae, org.springframework.security.web.session.SessionManagementFilter@2c9306d3, org.springframework.security.web.access.ExceptionTranslationFilter@681061d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3dfd7eaa]
2020-06-05 15:46:33,461 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:46:33,747 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Started PostServiceTest in 4.967 seconds (JVM running for 6.71)
2020-06-05 15:46:34,173 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:46:34,176 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:322}] to localhost:27017 because the pool has been closed.
2020-06-05 15:50:21,829 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] Starting OntologyServiceTest on okan-MBP with PID 22299 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:50:21,830 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:50:22,517 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:50:22,518 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:50:22,540 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:50:22,730 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:50:22,731 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:50:22,899 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:50:22,917 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 186ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:50:22,926 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:50:22,926 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:50:22,936 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:50:22,937 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:50:22,940 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:50:22,942 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:50:22,950 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 23ms. Found 1 Redis repository interfaces.
2020-06-05 15:50:23,453 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,458 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,459 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@153cb763' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,464 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,469 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,473 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:23,477 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:50:24,332 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:50:24,332 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:50:24,414 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda3f90a2c0de5914f085d6', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:328}] to localhost:27017
2020-06-05 15:50:24,420 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3f90a2c0de5914f085d6', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3080710}
2020-06-05 15:50:24,422 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3f90a2c0de5914f085d6', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:50:24,628 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:50:24,668 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:329}] to localhost:27017
2020-06-05 15:50:25,632 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@516b84d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c2a3f0c, org.springframework.security.web.header.HeaderWriterFilter@1d5bb5c, org.springframework.web.filter.CorsFilter@1ad1f167, org.springframework.security.web.authentication.logout.LogoutFilter@79777da7, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@608eb42e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6585df70, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1791e231, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d2b13b1, org.springframework.security.web.session.SessionManagementFilter@601d9f3a, org.springframework.security.web.access.ExceptionTranslationFilter@a240452, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25e796fe]
2020-06-05 15:50:25,885 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:50:26,228 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] Started OntologyServiceTest in 4.743 seconds (JVM running for 6.447)
2020-06-05 15:51:48,011 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:51:48,022 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:329}] to localhost:27017 because the pool has been closed.
2020-06-05 15:51:58,731 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] Starting OntologyServiceTest on okan-MBP with PID 22305 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:51:58,732 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:51:59,384 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:51:59,385 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:51:59,405 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 15:51:59,586 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:51:59,587 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:51:59,762 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:51:59,779 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 192ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:51:59,788 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:51:59,788 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:51:59,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:51:59,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:51:59,802 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:51:59,803 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:51:59,811 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 15:52:00,289 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,293 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,294 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@14b789f6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,299 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,303 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,306 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:00,308 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:52:01,039 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:52:01,039 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:52:01,102 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda3ff1223ea743ffce63ee', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:330}] to localhost:27017
2020-06-05 15:52:01,106 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3ff1223ea743ffce63ee', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2517822}
2020-06-05 15:52:01,107 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda3ff1223ea743ffce63ee', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:52:01,262 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:52:01,310 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:331}] to localhost:27017
2020-06-05 15:52:02,113 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@134a8ead, org.springframework.security.web.context.SecurityContextPersistenceFilter@4837f97e, org.springframework.security.web.header.HeaderWriterFilter@10b8b900, org.springframework.web.filter.CorsFilter@427308f8, org.springframework.security.web.authentication.logout.LogoutFilter@6ac45c0c, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@54247647, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@62a6674f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fddd7ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4975dda1, org.springframework.security.web.session.SessionManagementFilter@7d0cd23c, org.springframework.security.web.access.ExceptionTranslationFilter@2dfa02c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c176ff1]
2020-06-05 15:52:02,298 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:52:02,646 INFO com.okanciftci.cukatify.unit_integration.OntologyServiceTest [main] Started OntologyServiceTest in 4.175 seconds (JVM running for 5.451)
2020-06-05 15:52:04,403 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:52:04,407 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:331}] to localhost:27017 because the pool has been closed.
2020-06-05 15:53:51,537 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22310 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:53:51,538 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:53:52,030 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:53:52,031 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:53:52,048 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 15:53:52,196 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:53:52,196 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:53:52,411 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:53:52,429 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 233ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:53:52,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:53:52,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:53:52,448 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:53:52,448 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:53:52,449 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:53:52,449 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:53:52,455 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 15:53:52,919 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,924 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,925 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2539ab41' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,930 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,936 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,939 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:52,942 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:53:53,628 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:53:53,629 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:53:53,683 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda4061a95b3f10eac9ee4c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:332}] to localhost:27017
2020-06-05 15:53:53,690 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4061a95b3f10eac9ee4c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4595517}
2020-06-05 15:53:53,691 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4061a95b3f10eac9ee4c', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:53:53,866 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:53:53,924 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:333}] to localhost:27017
2020-06-05 15:53:54,790 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@258274cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@49235e8c, org.springframework.security.web.header.HeaderWriterFilter@22876aea, org.springframework.web.filter.CorsFilter@44c6e366, org.springframework.security.web.authentication.logout.LogoutFilter@3471bdfd, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@637edfe0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38c6f088, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f1f6c22, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3107833, org.springframework.security.web.session.SessionManagementFilter@694c23e4, org.springframework.security.web.access.ExceptionTranslationFilter@3c7b89ae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a907c78]
2020-06-05 15:53:54,985 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:53:55,306 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 4.025 seconds (JVM running for 7.139)
2020-06-05 15:53:55,691 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.PostServiceTest], using SpringBootContextLoader
2020-06-05 15:53:55,692 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.PostServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 15:53:55,692 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.PostServiceTest]: PostServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 15:53:55,695 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.PostServiceTest
2020-06-05 15:53:55,698 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 15:53:55,698 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57e51932, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@790431bf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b48451b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ba1edf4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74f2593b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2ca307d3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@157affc1, org.springframework.test.context.event.EventPublishingTestExecutionListener@11306ed7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@776dd64b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@43c4daea, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@102a1a4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13d63185, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@a10723a]
2020-06-05 15:53:55,830 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest], using SpringBootContextLoader
2020-06-05 15:53:55,831 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 15:53:55,831 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest]: OntologyServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 15:53:55,832 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.OntologyServiceTest
2020-06-05 15:53:55,834 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 15:53:55,834 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@23180ee3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10e9aa29, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@48ac2da4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@36ccc844, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55c0a768, org.springframework.test.context.transaction.TransactionalTestExecutionListener@8a5e71b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@214d2aa6, org.springframework.test.context.event.EventPublishingTestExecutionListener@71134823, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@21384a8e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@682ec8d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4ed2eee1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@25ebe548, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4664b741]
2020-06-05 15:53:57,319 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:53:57,322 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:333}] to localhost:27017 because the pool has been closed.
2020-06-05 15:59:45,860 INFO com.okanciftci.cukatify.unit_integration.RoleServiceTest [main] Starting RoleServiceTest on okan-MBP with PID 22326 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 15:59:45,899 INFO com.okanciftci.cukatify.unit_integration.RoleServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 15:59:46,400 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:59:46,400 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:59:46,420 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 15:59:46,593 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:59:46,593 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 15:59:46,824 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 15:59:46,841 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 247ms. Found 4 MongoDB repository interfaces.
2020-06-05 15:59:46,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 15:59:46,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 15:59:46,858 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:59:46,859 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:59:46,860 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:59:46,860 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 15:59:46,866 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 16ms. Found 1 Redis repository interfaces.
2020-06-05 15:59:47,321 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,325 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,326 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48528634' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,331 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,336 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,339 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:47,342 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 15:59:48,030 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 15:59:48,031 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 15:59:48,078 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda41c43d73585458dafeb8', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:339}] to localhost:27017
2020-06-05 15:59:48,084 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda41c43d73585458dafeb8', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3091580}
2020-06-05 15:59:48,085 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda41c43d73585458dafeb8', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 15:59:48,229 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 15:59:48,279 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:340}] to localhost:27017
2020-06-05 15:59:49,048 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19002b34, org.springframework.security.web.context.SecurityContextPersistenceFilter@63e5b8aa, org.springframework.security.web.header.HeaderWriterFilter@49a38b1, org.springframework.web.filter.CorsFilter@1ec88aa1, org.springframework.security.web.authentication.logout.LogoutFilter@2725ca05, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@3e6748ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4270b142, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10b8b900, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28f154cc, org.springframework.security.web.session.SessionManagementFilter@64656b9e, org.springframework.security.web.access.ExceptionTranslationFilter@2bd8f7db, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c9beb51]
2020-06-05 15:59:49,249 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 15:59:49,531 INFO com.okanciftci.cukatify.unit_integration.RoleServiceTest [main] Started RoleServiceTest in 3.902 seconds (JVM running for 4.962)
2020-06-05 15:59:49,769 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 15:59:49,773 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:340}] to localhost:27017 because the pool has been closed.
2020-06-05 16:02:39,015 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Starting UserServiceTest on okan-MBP with PID 22348 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:02:39,016 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:02:39,610 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:02:39,611 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:02:39,639 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 16:02:39,912 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:02:39,913 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:02:40,079 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:02:40,101 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 187ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:02:40,114 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:02:40,114 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:02:40,129 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:02:40,130 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:02:40,131 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:02:40,132 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:02:40,141 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 27ms. Found 1 Redis repository interfaces.
2020-06-05 16:02:40,610 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,615 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,617 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5633ed82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,622 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,627 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,630 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:40,633 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:02:41,363 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:02:41,364 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:02:41,415 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda427173b11d0005acb73a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:346}] to localhost:27017
2020-06-05 16:02:41,418 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda427173b11d0005acb73a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2350228}
2020-06-05 16:02:41,419 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda427173b11d0005acb73a', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:02:41,555 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:02:41,587 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:347}] to localhost:27017
2020-06-05 16:02:42,402 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cfb8e98, org.springframework.security.web.context.SecurityContextPersistenceFilter@10b8b900, org.springframework.security.web.header.HeaderWriterFilter@6629643d, org.springframework.web.filter.CorsFilter@5f193335, org.springframework.security.web.authentication.logout.LogoutFilter@2506b881, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@19002b34, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2801827a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64f4f12, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ec88aa1, org.springframework.security.web.session.SessionManagementFilter@2dfa02c1, org.springframework.security.web.access.ExceptionTranslationFilter@3caee3a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@418f0534]
2020-06-05 16:02:42,605 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:02:42,881 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Started UserServiceTest in 4.141 seconds (JVM running for 5.281)
2020-06-05 16:02:43,265 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:02:43,269 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:347}] to localhost:27017 because the pool has been closed.
2020-06-05 16:03:10,661 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Starting UserServiceTest on okan-MBP with PID 22352 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:03:10,664 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:03:11,750 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:03:11,750 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:03:11,778 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 16:03:12,079 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:03:12,080 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:03:12,816 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:03:12,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 758ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:03:12,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:03:12,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:03:12,859 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:03:12,860 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:03:12,861 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:03:12,862 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:03:12,869 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 16:03:13,414 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,421 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,422 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@19f02280' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,429 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,435 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,438 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:13,442 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:03:14,445 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:03:14,445 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:03:14,519 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda4292cf40c5435c74822c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:348}] to localhost:27017
2020-06-05 16:03:14,524 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4292cf40c5435c74822c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2943361}
2020-06-05 16:03:14,525 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4292cf40c5435c74822c', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:03:14,699 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:03:14,780 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:349}] to localhost:27017
2020-06-05 16:03:15,698 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78a165db, org.springframework.security.web.context.SecurityContextPersistenceFilter@3063be68, org.springframework.security.web.header.HeaderWriterFilter@23d978b, org.springframework.web.filter.CorsFilter@4eb48298, org.springframework.security.web.authentication.logout.LogoutFilter@3856d0cb, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@2d3bb944, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d2f09a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@270f7b4d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e429f56, org.springframework.security.web.session.SessionManagementFilter@50e8ed74, org.springframework.security.web.access.ExceptionTranslationFilter@22ff11ef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7891cf3]
2020-06-05 16:03:15,959 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:03:16,310 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Started UserServiceTest in 6.214 seconds (JVM running for 7.839)
2020-06-05 16:03:43,257 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:03:43,262 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:349}] to localhost:27017 because the pool has been closed.
2020-06-05 16:04:55,741 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Starting UserServiceTest on okan-MBP with PID 22359 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:04:55,742 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:04:56,451 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:04:56,452 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:04:56,471 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 16:04:56,758 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:04:56,759 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:04:57,038 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:04:57,060 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 301ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:04:57,071 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:04:57,072 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:04:57,082 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:04:57,082 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:04:57,083 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:04:57,084 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:04:57,091 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 16:04:57,701 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,706 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,707 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@23444a36' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,713 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,719 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,723 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:57,727 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:04:58,600 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:04:58,600 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:04:58,670 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda42fa5c6c7c3b027b0821', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:350}] to localhost:27017
2020-06-05 16:04:58,674 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda42fa5c6c7c3b027b0821', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2902797}
2020-06-05 16:04:58,675 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda42fa5c6c7c3b027b0821', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:04:58,872 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:04:58,930 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:351}] to localhost:27017
2020-06-05 16:04:59,966 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6942ee48, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d8fd077, org.springframework.security.web.header.HeaderWriterFilter@106802ea, org.springframework.web.filter.CorsFilter@3f033664, org.springframework.security.web.authentication.logout.LogoutFilter@1ce2029b, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@6abd8bcd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2052f095, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b7e4b20, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70cd122, org.springframework.security.web.session.SessionManagementFilter@6ab1f85b, org.springframework.security.web.access.ExceptionTranslationFilter@6d5508a5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30a791a6]
2020-06-05 16:05:00,242 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:05:00,616 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Started UserServiceTest in 5.227 seconds (JVM running for 7.054)
2020-06-05 16:05:01,076 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:05:01,080 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:351}] to localhost:27017 because the pool has been closed.
2020-06-05 16:05:38,102 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Starting UserServiceTest on okan-MBP with PID 22363 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:05:38,104 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:05:38,731 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:05:38,732 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:05:38,751 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 16:05:39,010 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:05:39,010 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:05:39,233 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:05:39,256 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 245ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:05:39,266 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:05:39,266 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:05:39,276 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:05:39,277 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:05:39,278 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:05:39,278 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:05:39,287 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 20ms. Found 1 Redis repository interfaces.
2020-06-05 16:05:39,964 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,968 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,970 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@730f9695' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,975 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,981 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,984 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:39,987 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:05:40,877 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:05:40,877 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:05:40,941 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda4324e58b0f76baaf9a29', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:352}] to localhost:27017
2020-06-05 16:05:40,946 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4324e58b0f76baaf9a29', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3126284}
2020-06-05 16:05:40,948 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4324e58b0f76baaf9a29', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:05:41,151 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:05:41,196 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:353}] to localhost:27017
2020-06-05 16:05:42,057 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@133aacbe, org.springframework.security.web.context.SecurityContextPersistenceFilter@2801827a, org.springframework.security.web.header.HeaderWriterFilter@64656b9e, org.springframework.web.filter.CorsFilter@2aa5bd48, org.springframework.security.web.authentication.logout.LogoutFilter@486bd064, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@7cfb8e98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@599f1b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d0cd23c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f193335, org.springframework.security.web.session.SessionManagementFilter@5785e813, org.springframework.security.web.access.ExceptionTranslationFilter@251c90f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@448ade1]
2020-06-05 16:05:42,261 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:05:42,508 INFO com.okanciftci.cukatify.unit_integration.UserServiceTest [main] Started UserServiceTest in 4.929 seconds (JVM running for 6.535)
2020-06-05 16:05:42,777 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:05:42,780 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:353}] to localhost:27017 because the pool has been closed.
2020-06-05 16:31:21,174 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Starting CategoryServiceTest on okan-MBP with PID 22425 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:31:21,175 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:31:21,846 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:31:21,847 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:31:21,864 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 16:31:22,048 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:31:22,048 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:31:22,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:31:22,246 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 197ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:31:22,256 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:31:22,256 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:31:22,273 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:31:22,274 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:31:22,275 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:31:22,276 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:31:22,285 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 28ms. Found 1 Redis repository interfaces.
2020-06-05 16:31:22,736 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,739 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,740 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2f37f1f9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,745 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,750 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,752 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:22,755 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:31:23,498 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:31:23,498 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:31:23,552 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda492b3531a93549d04a73', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:354}] to localhost:27017
2020-06-05 16:31:23,556 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda492b3531a93549d04a73', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2887816}
2020-06-05 16:31:23,557 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda492b3531a93549d04a73', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:31:23,733 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:31:23,778 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:355}] to localhost:27017
2020-06-05 16:31:24,580 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@783b3aa0, org.springframework.security.web.context.SecurityContextPersistenceFilter@43d76a92, org.springframework.security.web.header.HeaderWriterFilter@4837f97e, org.springframework.web.filter.CorsFilter@2ec85a25, org.springframework.security.web.authentication.logout.LogoutFilter@14f060b8, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@4c176ff1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@350323a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6459f4ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27c53c32, org.springframework.security.web.session.SessionManagementFilter@2725ca05, org.springframework.security.web.access.ExceptionTranslationFilter@7d0cd23c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28f154cc]
2020-06-05 16:31:24,811 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:31:25,111 INFO com.okanciftci.cukatify.unit_integration.CategoryServiceTest [main] Started CategoryServiceTest in 4.215 seconds (JVM running for 5.653)
2020-06-05 16:31:25,375 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:31:25,380 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:355}] to localhost:27017 because the pool has been closed.
2020-06-05 16:53:42,154 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22462 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:53:42,156 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:53:42,746 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:53:42,747 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:53:42,767 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 16:53:42,927 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:53:42,927 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:53:43,170 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:53:43,189 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 261ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:53:43,199 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:53:43,199 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:53:43,208 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:53:43,209 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:53:43,210 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:53:43,210 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:53:43,217 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 18ms. Found 1 Redis repository interfaces.
2020-06-05 16:53:43,706 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,710 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,712 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@28a6e171' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,718 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,723 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,726 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:43,729 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:53:44,596 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:53:44,597 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:53:44,661 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda4e68b179441d3f91e135', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:356}] to localhost:27017
2020-06-05 16:53:44,665 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4e68b179441d3f91e135', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2683798}
2020-06-05 16:53:44,666 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4e68b179441d3f91e135', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:53:44,810 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:53:44,868 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:357}] to localhost:27017
2020-06-05 16:53:45,874 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4203529f, org.springframework.security.web.context.SecurityContextPersistenceFilter@41f23499, org.springframework.security.web.header.HeaderWriterFilter@68f79b7c, org.springframework.web.filter.CorsFilter@7d82ca56, org.springframework.security.web.authentication.logout.LogoutFilter@d229912, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@2aaa89c2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f19d423, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43090195, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a58db42, org.springframework.security.web.session.SessionManagementFilter@36330be8, org.springframework.security.web.access.ExceptionTranslationFilter@6fefc5ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3387ab0]
2020-06-05 16:53:46,149 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:53:46,552 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.745 seconds (JVM running for 6.749)
2020-06-05 16:56:51,342 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:56:51,346 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:357}] to localhost:27017 because the pool has been closed.
2020-06-05 16:56:55,866 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22470 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 16:56:55,867 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 16:56:56,414 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:56:56,415 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:56:56,455 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-06-05 16:56:56,664 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:56:56,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 16:56:56,825 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 16:56:56,844 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 178ms. Found 4 MongoDB repository interfaces.
2020-06-05 16:56:56,852 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 16:56:56,853 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 16:56:56,863 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:56:56,863 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:56:56,864 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:56:56,865 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 16:56:56,872 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 16:56:57,376 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,380 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,381 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@14b789f6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,386 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,392 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,395 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:57,398 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 16:56:58,153 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 16:56:58,153 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 16:56:58,200 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda4f2a4d91f226059d0a5d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:358}] to localhost:27017
2020-06-05 16:56:58,204 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4f2a4d91f226059d0a5d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2359653}
2020-06-05 16:56:58,204 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda4f2a4d91f226059d0a5d', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 16:56:58,342 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 16:56:58,382 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:359}] to localhost:27017
2020-06-05 16:56:59,148 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@130a6eb9, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d0cd23c, org.springframework.security.web.header.HeaderWriterFilter@2dfa02c1, org.springframework.web.filter.CorsFilter@722531ab, org.springframework.security.web.authentication.logout.LogoutFilter@52354202, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@8f57e4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b0f266e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70881123, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26fadd98, org.springframework.security.web.session.SessionManagementFilter@22791b75, org.springframework.security.web.access.ExceptionTranslationFilter@63e5b8aa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44fd7ba4]
2020-06-05 16:56:59,362 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 16:56:59,714 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.119 seconds (JVM running for 5.393)
2020-06-05 16:57:00,446 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 16:57:00,450 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:359}] to localhost:27017 because the pool has been closed.
2020-06-05 17:07:14,164 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22533 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:07:14,165 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:07:14,830 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:14,831 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:07:14,852 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-06-05 17:07:15,017 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:15,017 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:07:15,206 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:07:15,223 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 206ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:07:15,232 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:15,233 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:07:15,242 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:15,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:15,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:15,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:15,255 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 21ms. Found 1 Redis repository interfaces.
2020-06-05 17:07:15,803 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,808 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,809 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@608cd501' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,815 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,820 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,824 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:15,828 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:16,694 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:07:16,695 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:07:16,788 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda5194a4748271e3c03d06', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:360}] to localhost:27017
2020-06-05 17:07:16,793 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5194a4748271e3c03d06', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2888866}
2020-06-05 17:07:16,794 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5194a4748271e3c03d06', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:07:17,010 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:07:17,051 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:361}] to localhost:27017
2020-06-05 17:07:18,044 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37fffef3, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c0b0bd9, org.springframework.security.web.header.HeaderWriterFilter@46d69ca4, org.springframework.web.filter.CorsFilter@6a116354, org.springframework.security.web.authentication.logout.LogoutFilter@4c79ca55, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@66716959, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f50c8f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13137835, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34e07e65, org.springframework.security.web.session.SessionManagementFilter@51df2a41, org.springframework.security.web.access.ExceptionTranslationFilter@6fcc0a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47f0e078]
2020-06-05 17:07:18,333 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:07:18,663 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.846 seconds (JVM running for 6.544)
2020-06-05 17:07:18,941 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:07:19,025 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:361}] to localhost:27017 because the pool has been closed.
2020-06-05 17:07:50,751 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22537 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:07:50,752 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:07:51,439 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:51,439 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:07:51,461 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:07:51,664 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:51,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:07:51,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:07:51,867 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 201ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:07:51,883 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:07:51,884 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:07:51,897 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:51,898 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:51,899 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:51,900 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:07:51,907 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 17:07:52,442 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,449 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,450 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30a9e3db' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,456 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,463 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,467 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:52,471 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:07:53,315 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:07:53,315 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:07:53,390 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda51b9390d2541b0f3136c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:362}] to localhost:27017
2020-06-05 17:07:53,394 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51b9390d2541b0f3136c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2719091}
2020-06-05 17:07:53,395 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51b9390d2541b0f3136c', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:07:53,550 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:07:53,606 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:363}] to localhost:27017
2020-06-05 17:07:54,550 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c9e74f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2211e731, org.springframework.security.web.header.HeaderWriterFilter@190bf8e4, org.springframework.web.filter.CorsFilter@813ab53, org.springframework.security.web.authentication.logout.LogoutFilter@713e49c3, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@5030997b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dd591b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b3bb287, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62c47480, org.springframework.security.web.session.SessionManagementFilter@104bc677, org.springframework.security.web.access.ExceptionTranslationFilter@3f6906f4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1325f967]
2020-06-05 17:07:54,828 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:07:55,212 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.797 seconds (JVM running for 6.249)
2020-06-05 17:08:04,727 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:08:04,733 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:363}] to localhost:27017 because the pool has been closed.
2020-06-05 17:08:17,823 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22541 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:08:17,824 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:08:18,319 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:18,319 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:08:18,336 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 17:08:18,568 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:18,568 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:08:18,725 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:08:18,743 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 175ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:08:18,752 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:18,752 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:08:18,761 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:18,762 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:18,763 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:18,763 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:18,769 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 17:08:19,230 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,234 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,235 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e1d03d7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,240 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,245 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,248 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:19,250 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:20,119 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:08:20,119 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:08:20,172 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda51d49963e0166f122989', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:364}] to localhost:27017
2020-06-05 17:08:20,175 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51d49963e0166f122989', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2247477}
2020-06-05 17:08:20,176 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51d49963e0166f122989', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:08:20,318 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:08:20,380 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:365}] to localhost:27017
2020-06-05 17:08:21,408 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19002b34, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b0f266e, org.springframework.security.web.header.HeaderWriterFilter@5785e813, org.springframework.web.filter.CorsFilter@1ec88aa1, org.springframework.security.web.authentication.logout.LogoutFilter@342ee097, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@3e6748ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53314f76, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e905f2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28f154cc, org.springframework.security.web.session.SessionManagementFilter@37d28938, org.springframework.security.web.access.ExceptionTranslationFilter@4270b142, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c9beb51]
2020-06-05 17:08:21,581 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:08:21,869 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.342 seconds (JVM running for 5.552)
2020-06-05 17:08:22,091 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:08:22,096 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:365}] to localhost:27017 because the pool has been closed.
2020-06-05 17:08:49,476 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22545 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:08:49,477 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:08:49,967 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:49,968 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:08:49,996 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:08:50,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:50,254 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:08:50,414 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:08:50,431 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 176ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:08:50,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:08:50,438 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:08:50,447 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:50,447 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:50,448 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:50,449 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:08:50,454 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 15ms. Found 1 Redis repository interfaces.
2020-06-05 17:08:50,952 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,956 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,957 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48d293ee' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,962 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,967 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,970 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:50,973 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:08:51,748 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:08:51,749 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:08:51,820 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda51f3ee9f0e3b923e5a62', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:366}] to localhost:27017
2020-06-05 17:08:51,825 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51f3ee9f0e3b923e5a62', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3366572}
2020-06-05 17:08:51,826 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51f3ee9f0e3b923e5a62', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:08:51,958 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:08:52,004 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:367}] to localhost:27017
2020-06-05 17:08:52,835 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4975dda1, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b0f266e, org.springframework.security.web.header.HeaderWriterFilter@5785e813, org.springframework.web.filter.CorsFilter@e0d1dc4, org.springframework.security.web.authentication.logout.LogoutFilter@342ee097, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@5463f035, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53314f76, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e905f2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@230232b0, org.springframework.security.web.session.SessionManagementFilter@37d28938, org.springframework.security.web.access.ExceptionTranslationFilter@4270b142, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6aff97d6]
2020-06-05 17:08:53,040 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:08:53,316 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.183 seconds (JVM running for 5.542)
2020-06-05 17:08:53,533 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:08:53,537 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:367}] to localhost:27017 because the pool has been closed.
2020-06-05 17:08:59,933 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22549 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:08:59,934 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:09:00,587 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:09:00,587 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:09:00,608 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:09:00,790 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:09:00,790 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:09:00,982 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:09:01,009 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 218ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:09:01,020 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:09:01,021 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:09:01,031 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:09:01,032 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:09:01,032 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:09:01,033 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:09:01,040 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 18ms. Found 1 Redis repository interfaces.
2020-06-05 17:09:01,556 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,560 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,561 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7fef0b40' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,566 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,571 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,574 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:01,577 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:09:02,411 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:09:02,411 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:09:02,481 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda51fe910a59670a8d6110', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:368}] to localhost:27017
2020-06-05 17:09:02,485 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51fe910a59670a8d6110', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3257421}
2020-06-05 17:09:02,487 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda51fe910a59670a8d6110', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:09:02,654 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:09:02,716 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:369}] to localhost:27017
2020-06-05 17:09:03,654 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40cb95c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@6879e983, org.springframework.security.web.header.HeaderWriterFilter@af3295f, org.springframework.web.filter.CorsFilter@1ead3c67, org.springframework.security.web.authentication.logout.LogoutFilter@26888c31, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@5e2b512b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45d38165, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13714753, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ba87c11, org.springframework.security.web.session.SessionManagementFilter@4ae2c01b, org.springframework.security.web.access.ExceptionTranslationFilter@72ec16f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7744195]
2020-06-05 17:09:03,919 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:09:04,257 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.654 seconds (JVM running for 6.325)
2020-06-05 17:10:04,359 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22561 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:10:04,360 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:10:05,010 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:10:05,011 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:10:05,033 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:10:05,226 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:10:05,226 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:10:05,404 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:10:05,423 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 196ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:10:05,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:10:05,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:10:05,443 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:10:05,444 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:10:05,446 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:10:05,447 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:10:05,456 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 23ms. Found 1 Redis repository interfaces.
2020-06-05 17:10:05,956 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,960 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,961 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@599a9cb2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,966 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,972 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,976 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:05,982 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:10:06,836 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:10:06,836 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:10:06,902 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda523e6479856b8405b095', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:370}] to localhost:27017
2020-06-05 17:10:06,909 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda523e6479856b8405b095', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4465394}
2020-06-05 17:10:06,910 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda523e6479856b8405b095', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:10:07,067 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:10:07,116 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:371}] to localhost:27017
2020-06-05 17:10:08,034 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61d7bb61, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d5bb5c, org.springframework.security.web.header.HeaderWriterFilter@558127d2, org.springframework.web.filter.CorsFilter@33f81280, org.springframework.security.web.authentication.logout.LogoutFilter@a6fc1bc, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@3991fe6d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48da64f2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2133b712, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a0e7f89, org.springframework.security.web.session.SessionManagementFilter@72585e83, org.springframework.security.web.access.ExceptionTranslationFilter@57a5b03, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f64bd7]
2020-06-05 17:10:08,292 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:10:08,673 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.657 seconds (JVM running for 6.151)
2020-06-05 17:10:56,784 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:10:56,789 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:371}] to localhost:27017 because the pool has been closed.
2020-06-05 17:11:01,815 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:11:01,818 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:369}] to localhost:27017 because the pool has been closed.
2020-06-05 17:11:06,520 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22569 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:11:06,521 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:11:07,197 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:11:07,197 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:11:07,219 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:11:07,416 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:11:07,416 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:11:07,604 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:11:07,624 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 207ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:11:07,634 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:11:07,634 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:11:07,647 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:11:07,648 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:11:07,649 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:11:07,650 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:11:07,657 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 17:11:08,161 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,165 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,166 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@77cca767' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,171 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,176 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,179 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:08,182 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:11:09,014 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:11:09,015 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:11:09,086 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda527da6471f4ab1e6e549', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:372}] to localhost:27017
2020-06-05 17:11:09,091 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda527da6471f4ab1e6e549', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2823483}
2020-06-05 17:11:09,092 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda527da6471f4ab1e6e549', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:11:09,252 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:11:09,308 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:373}] to localhost:27017
2020-06-05 17:11:10,274 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bdb6ea8, org.springframework.security.web.context.SecurityContextPersistenceFilter@7dd7ec56, org.springframework.security.web.header.HeaderWriterFilter@104bc677, org.springframework.web.filter.CorsFilter@3e55eeb9, org.springframework.security.web.authentication.logout.LogoutFilter@390a07a0, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@44a13699, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dd2ff87, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c421b0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1253b822, org.springframework.security.web.session.SessionManagementFilter@5e62ca19, org.springframework.security.web.access.ExceptionTranslationFilter@3412a3fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1554eaa4]
2020-06-05 17:11:10,554 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:11:10,910 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.719 seconds (JVM running for 6.148)
2020-06-05 17:11:11,226 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:11:11,230 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:373}] to localhost:27017 because the pool has been closed.
2020-06-05 17:13:49,640 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22574 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:13:49,641 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:13:50,354 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:13:50,354 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:13:50,377 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:13:50,588 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:13:50,588 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:13:50,759 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:13:50,778 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 189ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:13:50,787 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:13:50,787 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:13:50,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:13:50,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:13:50,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:13:50,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:13:50,815 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 27ms. Found 1 Redis repository interfaces.
2020-06-05 17:13:51,310 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,314 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,315 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@45592af7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,320 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,329 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,334 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:51,337 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:13:52,160 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:13:52,160 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:13:52,219 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda5320ab14e25834db36a1', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:374}] to localhost:27017
2020-06-05 17:13:52,224 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5320ab14e25834db36a1', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2885544}
2020-06-05 17:13:52,225 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5320ab14e25834db36a1', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:13:52,383 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:13:52,432 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:375}] to localhost:27017
2020-06-05 17:13:53,353 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@552cb0d5, org.springframework.security.web.context.SecurityContextPersistenceFilter@6879e983, org.springframework.security.web.header.HeaderWriterFilter@627d35ff, org.springframework.web.filter.CorsFilter@61d6c8c4, org.springframework.security.web.authentication.logout.LogoutFilter@b8142f4, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@74e2cfc5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@196d684b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54bc3bcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a5d5b38, org.springframework.security.web.session.SessionManagementFilter@1cab19e2, org.springframework.security.web.access.ExceptionTranslationFilter@3595086b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e66f1bd]
2020-06-05 17:13:53,612 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:13:53,970 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.66 seconds (JVM running for 6.203)
2020-06-05 17:13:54,463 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:13:54,466 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:375}] to localhost:27017 because the pool has been closed.
2020-06-05 17:21:09,459 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22631 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:21:09,461 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:21:10,454 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,459 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,460 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@77dba4cd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,470 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,476 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,481 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,486 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,512 WARN org.springframework.web.context.support.GenericWebApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.impl.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-06-05 17:21:10,517 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-05 17:21:10,539 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userService in com.okanciftci.cukatify.controllers.UserController required a bean of type 'com.okanciftci.cukatify.services.impl.UserService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.okanciftci.cukatify.services.impl.UserService' in your configuration.

2020-06-05 17:21:10,568 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22631 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:21:10,569 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:21:10,812 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,816 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,817 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5af64ce0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,828 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,830 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,834 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,837 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:21:10,850 WARN org.springframework.web.context.support.GenericWebApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.impl.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-06-05 17:21:10,851 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-05 17:21:10,867 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userService in com.okanciftci.cukatify.controllers.UserController required a bean of type 'com.okanciftci.cukatify.services.impl.UserService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.okanciftci.cukatify.services.impl.UserService' in your configuration.

2020-06-05 17:21:10,874 ERROR org.springframework.test.context.TestContextManager [main] Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@476b0ae6] to prepare test instance [com.okanciftci.cukatify.unit_integration.UserRestTest@53d1b9b3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43) ~[spring-boot-test-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98) [spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_251]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[na:1.8.0_251]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) ~[na:1.8.0_251]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[na:1.8.0_251]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[na:1.8.0_251]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[na:1.8.0_251]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743) ~[na:1.8.0_251]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742) ~[na:1.8.0_251]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580) ~[na:1.8.0_251]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at java.util.Optional.orElseGet(Optional.java:267) ~[na:1.8.0_251]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251) [junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29) ~[junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105) ~[junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.5.2.jar:5.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at java.util.ArrayList.forEach(ArrayList.java:1257) ~[na:1.8.0_251]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at java.util.ArrayList.forEach(ArrayList.java:1257) ~[na:1.8.0_251]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.5.2.jar:1.5.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229) ~[junit-platform-launcher-1.5.2.jar:1.5.2]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197) ~[junit-platform-launcher-1.5.2.jar:1.5.2]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211) ~[junit-platform-launcher-1.5.2.jar:1.5.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191) ~[junit-platform-launcher-1.5.2.jar:1.5.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) ~[junit-platform-launcher-1.5.2.jar:1.5.2]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) ~[junit5-rt.jar:na]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:na]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:na]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.impl.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125) ~[spring-boot-test-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.okanciftci.cukatify.services.impl.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 82 common frames omitted
2020-06-05 17:22:23,670 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22644 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:22:23,671 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:22:24,358 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:22:24,359 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:22:24,380 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:22:24,611 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:22:24,612 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:22:24,824 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:22:24,855 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 242ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:22:24,877 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:22:24,877 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:22:24,888 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:22:24,889 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:22:24,890 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:22:24,891 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:22:24,899 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 21ms. Found 1 Redis repository interfaces.
2020-06-05 17:22:25,638 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,643 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,644 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@525647f3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,649 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,654 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,657 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:25,663 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:22:26,473 INFO org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo [main] Download Version{3.5.5}:OS_X:B64 : starting...
2020-06-05 17:22:28,134 INFO org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo [main] Download Version{3.5.5}:OS_X:B64 : DownloadSize: 81088927
2020-06-05 17:22:28,135 INFO org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo [main] Download Version{3.5.5}:OS_X:B64 : 0 %
2020-06-05 17:22:34,947 INFO org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo [main] Download Version{3.5.5}:OS_X:B64 : 10 %
2020-06-05 17:23:15,848 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22655 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:23:15,849 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:23:16,701 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:23:16,702 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:23:16,724 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:23:16,924 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:23:16,925 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:23:17,266 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:23:17,328 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 402ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:23:17,342 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:23:17,342 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:23:17,353 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:23:17,354 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:23:17,355 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:23:17,356 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:23:17,363 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 20ms. Found 1 Redis repository interfaces.
2020-06-05 17:23:17,887 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,891 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,892 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@60bf494c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,897 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,902 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,905 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:17,908 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:23:18,777 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:23:18,777 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:23:18,843 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda555629bd1e522477bba2', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:376}] to localhost:27017
2020-06-05 17:23:18,847 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda555629bd1e522477bba2', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2730584}
2020-06-05 17:23:18,848 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda555629bd1e522477bba2', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:23:19,014 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:23:19,071 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:377}] to localhost:27017
2020-06-05 17:23:20,003 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54970127, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dcee890, org.springframework.security.web.header.HeaderWriterFilter@4c79ca55, org.springframework.web.filter.CorsFilter@3c4c7e51, org.springframework.security.web.authentication.logout.LogoutFilter@30c03473, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@749ee0e3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@713e49c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@72168258, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7891cf3, org.springframework.security.web.session.SessionManagementFilter@3c98981e, org.springframework.security.web.access.ExceptionTranslationFilter@432f4626, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1aa31454]
2020-06-05 17:23:20,272 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:23:20,649 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 5.534 seconds (JVM running for 8.507)
2020-06-05 17:23:33,801 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:23:33,803 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:377}] to localhost:27017 because the pool has been closed.
2020-06-05 17:25:04,634 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22661 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:25:04,635 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:25:05,410 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:25:05,411 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:25:05,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 17:25:05,604 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:25:05,604 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:25:05,810 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:25:05,830 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 225ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:25:05,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:25:05,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:25:05,848 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:25:05,848 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:25:05,849 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:25:05,849 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:25:05,856 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 17:25:06,382 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,387 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,388 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@644a3add' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,392 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,397 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,400 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:06,403 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:25:07,242 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:25:07,242 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:25:07,313 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda55c3141a540a354782d2', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:378}] to localhost:27017
2020-06-05 17:25:07,317 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda55c3141a540a354782d2', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2877027}
2020-06-05 17:25:07,319 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda55c3141a540a354782d2', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:25:07,487 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:25:07,552 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:379}] to localhost:27017
2020-06-05 17:25:08,495 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ef089ce, org.springframework.security.web.context.SecurityContextPersistenceFilter@5bccaedb, org.springframework.security.web.header.HeaderWriterFilter@687e561b, org.springframework.web.filter.CorsFilter@3340ce58, org.springframework.security.web.authentication.logout.LogoutFilter@1ff81b0d, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@14499b52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17ec5e2a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26712838, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@be083e1, org.springframework.security.web.session.SessionManagementFilter@173cfb01, org.springframework.security.web.access.ExceptionTranslationFilter@11f9b95a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14d1032a]
2020-06-05 17:25:08,778 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:25:09,143 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.832 seconds (JVM running for 6.309)
2020-06-05 17:25:09,478 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:25:09,485 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:379}] to localhost:27017 because the pool has been closed.
2020-06-05 17:26:18,378 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22690 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:26:18,379 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:26:19,094 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:19,095 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:26:19,116 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 17:26:19,274 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:19,274 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:26:19,474 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:26:19,496 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 222ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:26:19,507 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:19,507 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:26:19,517 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:19,518 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:19,518 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:19,519 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:19,529 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 17:26:19,977 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,981 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,983 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@65bdd558' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,988 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,992 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,995 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:19,997 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:20,748 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:26:20,748 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:26:20,809 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda560c5eb0dd0c37db33d2', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:380}] to localhost:27017
2020-06-05 17:26:20,813 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda560c5eb0dd0c37db33d2', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2472369}
2020-06-05 17:26:20,814 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda560c5eb0dd0c37db33d2', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:26:20,960 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:26:21,013 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:381}] to localhost:27017
2020-06-05 17:26:21,852 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@783b3aa0, org.springframework.security.web.context.SecurityContextPersistenceFilter@5785e813, org.springframework.security.web.header.HeaderWriterFilter@251c90f, org.springframework.web.filter.CorsFilter@2ec85a25, org.springframework.security.web.authentication.logout.LogoutFilter@350323a0, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@4c176ff1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d294ddc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22791b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27c53c32, org.springframework.security.web.session.SessionManagementFilter@4270b142, org.springframework.security.web.access.ExceptionTranslationFilter@53d6e959, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28f154cc]
2020-06-05 17:26:22,040 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:26:22,315 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.3 seconds (JVM running for 5.807)
2020-06-05 17:26:22,658 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:26:22,661 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:381}] to localhost:27017 because the pool has been closed.
2020-06-05 17:26:45,259 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22698 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:26:45,260 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:26:45,792 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:45,792 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:26:45,813 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 17:26:46,060 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:46,061 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:26:46,208 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:26:46,223 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 161ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:26:46,237 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:26:46,237 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:26:46,247 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:46,248 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:46,249 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:46,249 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:26:46,256 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 19ms. Found 1 Redis repository interfaces.
2020-06-05 17:26:46,732 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,736 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,737 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5633ed82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,742 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,746 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,749 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:46,751 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:26:47,499 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:26:47,499 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:26:47,542 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda5627043112574a88ab50', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:382}] to localhost:27017
2020-06-05 17:26:47,545 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5627043112574a88ab50', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2124493}
2020-06-05 17:26:47,546 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5627043112574a88ab50', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:26:47,676 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:26:47,716 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:383}] to localhost:27017
2020-06-05 17:26:48,518 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2aa5bd48, org.springframework.security.web.context.SecurityContextPersistenceFilter@2dd178f3, org.springframework.security.web.header.HeaderWriterFilter@3e6ec74, org.springframework.web.filter.CorsFilter@7cfb8e98, org.springframework.security.web.authentication.logout.LogoutFilter@703fa45, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@5f193335, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6870cfac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4270b142, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19002b34, org.springframework.security.web.session.SessionManagementFilter@69a40b3c, org.springframework.security.web.access.ExceptionTranslationFilter@4ffced4e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21f9c6ea]
2020-06-05 17:26:48,706 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:26:49,022 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.074 seconds (JVM running for 5.228)
2020-06-05 17:26:49,360 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:26:49,364 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:383}] to localhost:27017 because the pool has been closed.
2020-06-05 17:30:43,209 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserControllerTest on okan-MBP with PID 22725 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:30:43,210 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:30:43,811 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:30:43,812 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:30:43,833 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 17:30:44,081 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:30:44,081 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:30:44,241 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:30:44,262 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 181ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:30:44,272 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:30:44,272 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:30:44,281 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:30:44,282 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:30:44,282 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:30:44,283 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:30:44,289 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17ms. Found 1 Redis repository interfaces.
2020-06-05 17:30:44,814 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,819 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,820 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@587a1cfb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,825 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,830 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,834 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:44,836 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:30:45,531 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:30:45,531 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:30:45,590 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda5715c7398369c9289ee1', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:384}] to localhost:27017
2020-06-05 17:30:45,595 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5715c7398369c9289ee1', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3184773}
2020-06-05 17:30:45,596 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5715c7398369c9289ee1', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:30:45,762 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:30:45,808 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:385}] to localhost:27017
2020-06-05 17:30:46,647 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@134a8ead, org.springframework.security.web.context.SecurityContextPersistenceFilter@17c4dc5b, org.springframework.security.web.header.HeaderWriterFilter@6314df3c, org.springframework.web.filter.CorsFilter@427308f8, org.springframework.security.web.authentication.logout.LogoutFilter@6b1321b7, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@54247647, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4837f97e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@703fa45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4975dda1, org.springframework.security.web.session.SessionManagementFilter@64f4f12, org.springframework.security.web.access.ExceptionTranslationFilter@2c9306d3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c176ff1]
2020-06-05 17:30:46,853 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:30:47,145 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserControllerTest in 4.147 seconds (JVM running for 5.343)
2020-06-05 17:30:47,437 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:30:47,441 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:385}] to localhost:27017 because the pool has been closed.
2020-06-05 17:44:57,879 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Starting PostServiceTest on okan-MBP with PID 22814 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 17:44:57,880 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] No active profile set, falling back to default profiles: default
2020-06-05 17:44:58,402 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:44:58,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:44:58,422 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 17:44:58,550 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:44:58,550 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 17:44:58,723 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 17:44:58,789 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 238ms. Found 4 MongoDB repository interfaces.
2020-06-05 17:44:58,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 17:44:58,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 17:44:58,806 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:44:58,806 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:44:58,807 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:44:58,807 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 17:44:58,814 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 16ms. Found 1 Redis repository interfaces.
2020-06-05 17:44:59,201 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,205 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,206 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e38b4ea' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,212 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,217 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,220 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,222 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 17:44:59,923 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 17:44:59,923 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 17:44:59,978 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda5a6b1153416ced2a812d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:386}] to localhost:27017
2020-06-05 17:44:59,981 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5a6b1153416ced2a812d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2601139}
2020-06-05 17:44:59,982 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda5a6b1153416ced2a812d', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 17:45:00,117 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 17:45:00,166 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:387}] to localhost:27017
2020-06-05 17:45:00,927 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30090808, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a9a1adf, org.springframework.security.web.header.HeaderWriterFilter@485e52c9, org.springframework.web.filter.CorsFilter@f562214, org.springframework.security.web.authentication.logout.LogoutFilter@174cd1a4, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@6dafe488, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b7b2967, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d2bac23, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71ebb8e1, org.springframework.security.web.session.SessionManagementFilter@4febb6e6, org.springframework.security.web.access.ExceptionTranslationFilter@627ed93a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2573cc0c]
2020-06-05 17:45:01,143 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 17:45:01,414 INFO com.okanciftci.cukatify.unit_integration.PostServiceTest [main] Started PostServiceTest in 3.782 seconds (JVM running for 6.684)
2020-06-05 17:45:01,835 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest], using SpringBootContextLoader
2020-06-05 17:45:01,836 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 17:45:01,837 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.OntologyServiceTest]: OntologyServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 17:45:01,839 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.OntologyServiceTest
2020-06-05 17:45:01,842 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 17:45:01,843 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@21e67d8d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@23b05e58, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3026d4cd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@401516ad, org.springframework.test.context.support.DirtiesContextTestExecutionListener@520d0137, org.springframework.test.context.transaction.TransactionalTestExecutionListener@73eed7b0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7568f5bc, org.springframework.test.context.event.EventPublishingTestExecutionListener@1d2035c2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@271e8be8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@22c88bec, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@10bf4f1c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c2de6ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5fbf6d4a]
2020-06-05 17:45:03,455 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.CukatifyApplicationTests], using SpringBootContextLoader
2020-06-05 17:45:03,456 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.CukatifyApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 17:45:03,456 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.CukatifyApplicationTests]: CukatifyApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 17:45:03,460 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.CukatifyApplicationTests
2020-06-05 17:45:03,462 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 17:45:03,463 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3de8af4d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60155d7f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@10d60285, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@773a45bd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f501ed0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@456454e0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6586b4e3, org.springframework.test.context.event.EventPublishingTestExecutionListener@40340243, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4f9d220b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2839ac4c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@78483404, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@180e1754, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ea5f324]
2020-06-05 17:45:03,471 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.UserServiceTest], using SpringBootContextLoader
2020-06-05 17:45:03,472 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.UserServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 17:45:03,472 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.UserServiceTest]: UserServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 17:45:03,473 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.UserServiceTest
2020-06-05 17:45:03,475 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 17:45:03,475 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b9b7370, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@62ca9413, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a969ba9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1b3b650c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1b3b95e8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2d67f090, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@13126d46, org.springframework.test.context.event.EventPublishingTestExecutionListener@53c1792d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14922268, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@663b31a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@69b96cd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5e4b9f22, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5b4f77e1]
2020-06-05 17:45:03,754 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.CategoryServiceTest], using SpringBootContextLoader
2020-06-05 17:45:03,757 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.CategoryServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 17:45:03,757 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.CategoryServiceTest]: CategoryServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 17:45:03,758 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.CategoryServiceTest
2020-06-05 17:45:03,759 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 17:45:03,759 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@350ce9db, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@279ebd4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4bbe3a45, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@605694dc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32c6eb3c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fac91fb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@457af059, org.springframework.test.context.event.EventPublishingTestExecutionListener@115e7c5e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1444fa42, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ffc9278, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d9643e6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7f487086, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4ced03c7]
2020-06-05 17:45:03,790 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.okanciftci.cukatify.unit_integration.RoleServiceTest], using SpringBootContextLoader
2020-06-05 17:45:03,794 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.okanciftci.cukatify.unit_integration.RoleServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-06-05 17:45:03,795 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.okanciftci.cukatify.unit_integration.RoleServiceTest]: RoleServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-06-05 17:45:03,797 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.okanciftci.cukatify.CukatifyApplication for test class com.okanciftci.cukatify.unit_integration.RoleServiceTest
2020-06-05 17:45:03,799 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-06-05 17:45:03,800 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@8cfc918, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@343f54c7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@10e88abc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7ed47d66, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8a5ecad, org.springframework.test.context.transaction.TransactionalTestExecutionListener@46721812, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@121bc70a, org.springframework.test.context.event.EventPublishingTestExecutionListener@4f79a762, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@689efaa4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3efadd2d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@72956e6f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70d595e8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6f810a8c]
2020-06-05 17:45:04,432 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 17:45:04,445 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:387}] to localhost:27017 because the pool has been closed.
2020-06-05 21:15:57,937 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22911 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:15:57,938 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:15:58,657 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:15:58,658 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:15:58,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-06-05 21:15:58,874 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:15:58,875 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:15:59,049 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:15:59,067 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 191ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:15:59,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:15:59,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:15:59,088 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:15:59,089 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:15:59,090 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:15:59,091 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:15:59,098 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 22ms. Found 1 Redis repository interfaces.
2020-06-05 21:15:59,588 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,592 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,594 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@767191b1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,599 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,604 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,607 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:15:59,610 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:16:00,408 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:16:00,408 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:16:00,465 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8be0ecc9163ba13b6f55', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:388}] to localhost:27017
2020-06-05 21:16:00,469 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8be0ecc9163ba13b6f55', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2721492}
2020-06-05 21:16:00,470 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8be0ecc9163ba13b6f55', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:16:00,614 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:16:00,666 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:389}] to localhost:27017
2020-06-05 21:16:01,518 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a9b41a0, org.springframework.security.web.context.SecurityContextPersistenceFilter@5785e813, org.springframework.security.web.header.HeaderWriterFilter@251c90f, org.springframework.web.filter.CorsFilter@5fe46d52, org.springframework.security.web.authentication.logout.LogoutFilter@350323a0, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@448ade1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d294ddc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22791b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21f9c6ea, org.springframework.security.web.session.SessionManagementFilter@4270b142, org.springframework.security.web.access.ExceptionTranslationFilter@53d6e959, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c7d7430]
2020-06-05 21:16:01,764 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:16:02,063 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 4.416 seconds (JVM running for 5.641)
2020-06-05 21:16:02,671 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:16:02,675 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:389}] to localhost:27017 because the pool has been closed.
2020-06-05 21:18:09,804 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22916 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:18:09,806 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:18:10,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:18:10,443 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:18:10,466 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-06-05 21:18:10,656 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:18:10,657 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:18:10,826 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:18:10,845 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 188ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:18:10,858 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:18:10,858 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:18:10,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:18:10,871 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:18:10,872 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:18:10,873 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:18:10,886 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 27ms. Found 1 Redis repository interfaces.
2020-06-05 21:18:11,428 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,433 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,434 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6e8fdd19' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,440 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,447 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,450 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:11,454 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:18:12,320 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:18:12,320 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:18:12,399 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8c644f81c80bff1e03ab', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:390}] to localhost:27017
2020-06-05 21:18:12,404 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8c644f81c80bff1e03ab', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2747419}
2020-06-05 21:18:12,405 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8c644f81c80bff1e03ab', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:18:12,568 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:18:12,615 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:391}] to localhost:27017
2020-06-05 21:18:13,574 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@554d040d, org.springframework.security.web.context.SecurityContextPersistenceFilter@2133b712, org.springframework.security.web.header.HeaderWriterFilter@4552f905, org.springframework.web.filter.CorsFilter@3fe24670, org.springframework.security.web.authentication.logout.LogoutFilter@124ff64d, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@3c46e6f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b7e4d14, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d93ff21, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d6019d5, org.springframework.security.web.session.SessionManagementFilter@72585e83, org.springframework.security.web.access.ExceptionTranslationFilter@12270a01, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d2b13b1]
2020-06-05 21:18:13,856 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:18:14,245 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 4.794 seconds (JVM running for 6.47)
2020-06-05 21:18:14,824 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:18:14,830 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:391}] to localhost:27017 because the pool has been closed.
2020-06-05 21:19:44,657 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22936 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:19:44,658 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:19:45,371 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:19:45,372 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:19:45,395 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 21:19:45,606 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:19:45,607 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:19:45,783 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:19:45,804 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 197ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:19:45,816 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:19:45,816 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:19:45,829 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:19:45,830 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:19:45,831 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:19:45,832 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:19:45,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 23ms. Found 1 Redis repository interfaces.
2020-06-05 21:19:46,428 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,435 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,436 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51ff3c4b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,448 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,456 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,460 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:46,465 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:19:47,400 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:19:47,400 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:19:47,479 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8cc323c5ad2c13235f44', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:392}] to localhost:27017
2020-06-05 21:19:47,484 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8cc323c5ad2c13235f44', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3684614}
2020-06-05 21:19:47,486 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8cc323c5ad2c13235f44', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:19:47,666 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:19:47,713 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:393}] to localhost:27017
2020-06-05 21:19:48,718 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64ef2719, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d7556a8, org.springframework.security.web.header.HeaderWriterFilter@7ef9c8a5, org.springframework.web.filter.CorsFilter@7b423f90, org.springframework.security.web.authentication.logout.LogoutFilter@5a4b8e25, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@24f3fb87, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48860139, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33568e26, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c7673ae, org.springframework.security.web.session.SessionManagementFilter@fefb66c, org.springframework.security.web.access.ExceptionTranslationFilter@4f2b1e9f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ead3c67]
2020-06-05 21:19:49,008 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:19:49,367 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 5.053 seconds (JVM running for 6.552)
2020-06-05 21:19:50,017 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:19:50,023 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:393}] to localhost:27017 because the pool has been closed.
2020-06-05 21:26:14,942 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22966 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:26:14,944 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:26:15,830 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:26:15,833 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:26:15,860 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 21:26:16,088 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:26:16,089 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:26:16,272 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:26:16,295 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 205ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:26:16,317 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:26:16,318 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:26:16,337 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:26:16,339 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:26:16,340 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:26:16,341 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:26:16,352 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 34ms. Found 1 Redis repository interfaces.
2020-06-05 21:26:16,909 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,913 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,914 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@28a6e171' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,919 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,924 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,928 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:16,932 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:26:17,977 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:26:17,977 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:26:18,054 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8e49e3a4101b7edc678b', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:394}] to localhost:27017
2020-06-05 21:26:18,058 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8e49e3a4101b7edc678b', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2673456}
2020-06-05 21:26:18,059 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8e49e3a4101b7edc678b', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:26:18,221 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:26:18,276 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:395}] to localhost:27017
2020-06-05 21:26:19,224 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12c78f36, org.springframework.security.web.context.SecurityContextPersistenceFilter@48da64f2, org.springframework.security.web.header.HeaderWriterFilter@4552f905, org.springframework.web.filter.CorsFilter@7bdb4d69, org.springframework.security.web.authentication.logout.LogoutFilter@360a3106, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@129c760d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2aa811f9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70f91ae3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@361fa478, org.springframework.security.web.session.SessionManagementFilter@1d5bb5c, org.springframework.security.web.access.ExceptionTranslationFilter@2792c28, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65930e02]
2020-06-05 21:26:19,476 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:26:19,818 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 5.196 seconds (JVM running for 7.598)
2020-06-05 21:26:29,914 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:26:29,919 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:395}] to localhost:27017 because the pool has been closed.
2020-06-05 21:28:21,172 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22975 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:28:21,174 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:28:21,864 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:28:21,865 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:28:21,892 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-06-05 21:28:22,070 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:28:22,071 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:28:22,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:28:22,263 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 191ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:28:22,272 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:28:22,272 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:28:22,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:28:22,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:28:22,287 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:28:22,287 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:28:22,300 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 27ms. Found 1 Redis repository interfaces.
2020-06-05 21:28:22,810 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,815 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,817 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4bf03fee' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,823 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,829 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,832 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:22,835 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:28:23,757 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:28:23,757 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:28:23,823 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8ec7512d4e2b9b554f48', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:396}] to localhost:27017
2020-06-05 21:28:23,828 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8ec7512d4e2b9b554f48', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2870181}
2020-06-05 21:28:23,829 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8ec7512d4e2b9b554f48', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:28:23,995 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:28:24,051 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:397}] to localhost:27017
2020-06-05 21:28:24,986 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f9213d2, org.springframework.security.web.context.SecurityContextPersistenceFilter@c6c84fa, org.springframework.security.web.header.HeaderWriterFilter@54737322, org.springframework.web.filter.CorsFilter@679f59f1, org.springframework.security.web.authentication.logout.LogoutFilter@59b3f754, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@6b5e1fc5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64688978, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b895e76, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47ffa248, org.springframework.security.web.session.SessionManagementFilter@12a0d249, org.springframework.security.web.access.ExceptionTranslationFilter@2270f58d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7eebb316]
2020-06-05 21:28:25,252 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:28:25,623 INFO org.springframework.boot.test.mock.web.SpringBootMockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-06-05 21:28:25,623 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Initializing Servlet ''
2020-06-05 21:28:25,638 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Completed initialization in 15 ms
2020-06-05 21:28:25,658 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 4.838 seconds (JVM running for 6.289)
2020-06-05 21:28:25,930 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [main] couldn't find bearer string, will ignore the header
2020-06-05 21:28:26,129 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:28:26,133 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:397}] to localhost:27017 because the pool has been closed.
2020-06-05 21:29:02,174 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22980 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:29:02,176 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:29:02,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:02,840 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:29:02,866 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-06-05 21:29:03,046 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:03,047 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:29:03,222 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:29:03,240 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 192ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:29:03,249 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:03,250 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:29:03,262 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:03,263 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:03,263 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:03,264 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:03,273 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 23ms. Found 1 Redis repository interfaces.
2020-06-05 21:29:03,784 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,792 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,793 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@18d47df0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,800 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,806 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,809 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:03,812 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:04,656 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:29:04,657 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:29:04,729 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8ef0c764145c8e06bf59', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:398}] to localhost:27017
2020-06-05 21:29:04,733 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8ef0c764145c8e06bf59', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2730271}
2020-06-05 21:29:04,734 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8ef0c764145c8e06bf59', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:29:04,876 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:29:04,931 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:399}] to localhost:27017
2020-06-05 21:29:05,856 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a9c92b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@729d6ee2, org.springframework.security.web.header.HeaderWriterFilter@70421a08, org.springframework.web.filter.CorsFilter@67c2b55d, org.springframework.security.web.authentication.logout.LogoutFilter@36a1fd20, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@5db04bd2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4adcc981, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d190639, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f921e32, org.springframework.security.web.session.SessionManagementFilter@5c7c75fb, org.springframework.security.web.access.ExceptionTranslationFilter@32069394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@565a6af]
2020-06-05 21:29:06,106 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:29:06,493 INFO org.springframework.boot.test.mock.web.SpringBootMockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-06-05 21:29:06,493 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Initializing Servlet ''
2020-06-05 21:29:06,505 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Completed initialization in 12 ms
2020-06-05 21:29:06,527 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 4.674 seconds (JVM running for 6.352)
2020-06-05 21:29:06,784 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [main] couldn't find bearer string, will ignore the header
2020-06-05 21:29:07,293 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:29:07,298 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:399}] to localhost:27017 because the pool has been closed.
2020-06-05 21:29:26,123 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 22985 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:29:26,125 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:29:26,882 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:26,882 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:29:26,901 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-06-05 21:29:27,210 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:27,210 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:29:27,517 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:29:27,604 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 393ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:29:27,641 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:29:27,642 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:29:27,656 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:27,657 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:27,657 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:27,658 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:29:27,670 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 27ms. Found 1 Redis repository interfaces.
2020-06-05 21:29:28,238 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,241 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,242 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fb64e14' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,248 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,253 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,256 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:28,259 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:29:29,061 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:29:29,061 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:29:29,147 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8f095456d06786159b62', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:400}] to localhost:27017
2020-06-05 21:29:29,152 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8f095456d06786159b62', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3220966}
2020-06-05 21:29:29,153 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8f095456d06786159b62', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:29:29,336 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:29:29,389 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:401}] to localhost:27017
2020-06-05 21:29:30,306 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@102ecb61, org.springframework.security.web.context.SecurityContextPersistenceFilter@1425e531, org.springframework.security.web.header.HeaderWriterFilter@35555145, org.springframework.web.filter.CorsFilter@1fd0ae78, org.springframework.security.web.authentication.logout.LogoutFilter@12404f9d, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@583030bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fe4503a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1013871e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f57666b, org.springframework.security.web.session.SessionManagementFilter@4e030feb, org.springframework.security.web.access.ExceptionTranslationFilter@33568e26, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@215a329c]
2020-06-05 21:29:30,566 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:29:30,944 INFO org.springframework.boot.test.mock.web.SpringBootMockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-06-05 21:29:30,945 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Initializing Servlet ''
2020-06-05 21:29:30,961 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Completed initialization in 16 ms
2020-06-05 21:29:30,986 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 5.206 seconds (JVM running for 7.107)
2020-06-05 21:29:31,270 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [main] couldn't find bearer string, will ignore the header
2020-06-05 21:29:31,774 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:29:31,778 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:401}] to localhost:27017 because the pool has been closed.
2020-06-05 21:32:38,153 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Starting UserRestTest on okan-MBP with PID 23002 (started by okanciftci in /Users/okanciftci/Desktop/cukatify-fork/Cukatify/Backend/cukatify)
2020-06-05 21:32:38,157 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] No active profile set, falling back to default profiles: default
2020-06-05 21:32:38,737 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:32:38,737 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:32:38,758 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-06-05 21:32:38,920 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:32:38,920 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-05 21:32:39,123 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.redis.ActorRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2020-06-05 21:32:39,141 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 221ms. Found 4 MongoDB repository interfaces.
2020-06-05 21:32:39,149 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-05 21:32:39,149 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-05 21:32:39,158 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:32:39,159 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.PostRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:32:39,159 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:32:39,160 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.okanciftci.cukatify.persistence.mongo.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-06-05 21:32:39,166 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 16ms. Found 1 Redis repository interfaces.
2020-06-05 21:32:39,651 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,655 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,656 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7baf1f5a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,660 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,666 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,669 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:39,672 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-05 21:32:40,534 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-05 21:32:40,534 INFO org.mongodb.driver.cluster [main] Adding discovered server localhost:27017 to client view of cluster
2020-06-05 21:32:40,617 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5eda8fc86a679a198101423a', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:402}] to localhost:27017
2020-06-05 21:32:40,626 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8fc86a679a198101423a', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6000274}
2020-06-05 21:32:40,629 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5eda8fc86a679a198101423a', description='null'}-localhost:27017] Discovered cluster type of STANDALONE
2020-06-05 21:32:40,915 WARN org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator [main] Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2020-06-05 21:32:40,950 INFO org.mongodb.driver.connection [main] Opened connection [connectionId{localValue:2, serverValue:403}] to localhost:27017
2020-06-05 21:32:41,759 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1471b98d, org.springframework.security.web.context.SecurityContextPersistenceFilter@72a8361b, org.springframework.security.web.header.HeaderWriterFilter@71d55b7e, org.springframework.web.filter.CorsFilter@5514579e, org.springframework.security.web.authentication.logout.LogoutFilter@68e2d03e, com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter@58c42c8c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c48b543, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ea7bc4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3af236d0, org.springframework.security.web.session.SessionManagementFilter@1eeb5818, org.springframework.security.web.access.ExceptionTranslationFilter@28b523a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@307af381]
2020-06-05 21:32:41,999 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-06-05 21:32:42,276 INFO org.springframework.boot.test.mock.web.SpringBootMockServletContext [main] Initializing Spring TestDispatcherServlet ''
2020-06-05 21:32:42,277 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Initializing Servlet ''
2020-06-05 21:32:42,287 INFO org.springframework.test.web.servlet.TestDispatcherServlet [main] Completed initialization in 10 ms
2020-06-05 21:32:42,305 INFO com.okanciftci.cukatify.unit_integration.UserRestTest [main] Started UserRestTest in 4.76 seconds (JVM running for 6.233)
2020-06-05 21:32:42,548 WARN com.okanciftci.cukatify.security.jwt.JwtAuthenticationFilter [main] couldn't find bearer string, will ignore the header
2020-06-05 21:32:42,984 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-05 21:32:42,988 INFO org.mongodb.driver.connection [SpringContextShutdownHook] Closed connection [connectionId{localValue:2, serverValue:403}] to localhost:27017 because the pool has been closed.
